import type { Token } from "../../../../bridge/types/Token.js";
import type { ThirdwebClient } from "../../../../client/client.js";
import { type Address } from "../../../../utils/address.js";
import type { PayEmbedConnectOptions } from "../PayEmbed.js";
import type { UIOptions } from "./BridgeOrchestrator.js";
export interface FundWalletProps {
    /**
     * UI configuration and mode
     */
    uiOptions: Extract<UIOptions, {
        mode: "fund_wallet";
    }>;
    /**
     * The receiver address, defaults to the connected wallet address
     */
    receiverAddress?: Address;
    /**
     * ThirdwebClient for price fetching
     */
    client: ThirdwebClient;
    /**
     * Called when continue is clicked with the resolved requirements
     */
    onContinue: (amount: string, token: Token, receiverAddress: Address) => void;
    /**
     * Quick buy amounts
     */
    presetOptions?: [number, number, number];
    /**
     * Connect options for wallet connection
     */
    connectOptions?: PayEmbedConnectOptions;
}
export declare function FundWallet({ client, receiverAddress, uiOptions, onContinue, presetOptions, connectOptions, }: FundWalletProps): import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=FundWallet.d.ts.map