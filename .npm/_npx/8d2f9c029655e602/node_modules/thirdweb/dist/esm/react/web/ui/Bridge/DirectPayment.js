"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { defineChain } from "../../../../chains/utils.js";
import { shortenAddress } from "../../../../utils/address.js";
import { useCustomTheme } from "../../../core/design-system/CustomThemeProvider.js";
import { useActiveAccount } from "../../../core/hooks/wallets/useActiveAccount.js";
import { useEnsName } from "../../../core/utils/wallet.js";
import { ConnectButton } from "../ConnectWallet/ConnectButton.js";
import { PoweredByThirdweb } from "../ConnectWallet/PoweredByTW.js";
import { FiatValue } from "../ConnectWallet/screens/Buy/swap/FiatValue.js";
import { Container, Line } from "../components/basic.js";
import { Button } from "../components/buttons.js";
import { ChainName } from "../components/ChainName.js";
import { Spacer } from "../components/Spacer.js";
import { Text } from "../components/text.js";
import { ChainIcon } from "./common/TokenAndChain.js";
import { WithHeader } from "./common/WithHeader.js";
export function DirectPayment({ uiOptions, client, onContinue, connectOptions, }) {
    const activeAccount = useActiveAccount();
    const chain = defineChain(uiOptions.paymentInfo.token.chainId);
    const theme = useCustomTheme();
    const handleContinue = () => {
        onContinue(uiOptions.paymentInfo.amount, uiOptions.paymentInfo.token, uiOptions.paymentInfo.sellerAddress);
    };
    const ensName = useEnsName({
        address: uiOptions.paymentInfo.sellerAddress,
        client,
    });
    const sellerAddress = ensName.data || shortenAddress(uiOptions.paymentInfo.sellerAddress);
    const buyNow = (_jsxs(Container, { flex: "row", gap: "3xs", children: [_jsx(Text, { color: "primaryButtonText", size: "md", children: "Buy Now \u00B7" }), _jsx(FiatValue, { chain: chain, client: client, color: "primaryButtonText", size: "md", token: uiOptions.paymentInfo.token, tokenAmount: uiOptions.paymentInfo.amount })] }));
    return (_jsxs(WithHeader, { client: client, defaultTitle: "Direct Payment", uiOptions: uiOptions, children: [_jsxs(Container, { center: "y", flex: "row", gap: "3xs", style: {
                    justifyContent: "space-between",
                }, children: [_jsx(FiatValue, { chain: chain, client: client, color: "primaryText", size: "xl", token: uiOptions.paymentInfo.token, tokenAmount: uiOptions.paymentInfo.amount, weight: 700 }), _jsx(Container, { flex: "row", gap: "3xs", children: _jsx(Text, { color: "secondaryText", size: "xs", style: {
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                                whiteSpace: "nowrap",
                            }, children: "One-time payment" }) })] }), _jsx(Spacer, { y: "md" }), _jsx(Line, {}), _jsx(Spacer, { y: "md" }), _jsxs(Container, { flex: "row", style: {
                    alignItems: "center",
                    justifyContent: "space-between",
                }, children: [_jsx(Text, { color: "secondaryText", size: "sm", children: "Sold by" }), _jsx(Text, { color: "primaryText", size: "sm", style: {
                            fontFamily: "monospace",
                        }, children: sellerAddress })] }), _jsx(Spacer, { y: "xs" }), _jsxs(Container, { flex: "row", style: {
                    alignItems: "center",
                    justifyContent: "space-between",
                }, children: [_jsx(Text, { color: "secondaryText", size: "sm", children: "Price" }), _jsx(Text, { color: "primaryText", size: "sm", style: {
                            fontFamily: "monospace",
                        }, children: `${uiOptions.paymentInfo.amount} ${uiOptions.paymentInfo.token.symbol}` })] }), _jsx(Spacer, { y: "xs" }), _jsxs(Container, { flex: "row", style: {
                    alignItems: "center",
                    justifyContent: "space-between",
                }, children: [_jsx(Text, { color: "secondaryText", size: "sm", children: "Network" }), _jsxs(Container, { center: "y", flex: "row", gap: "3xs", children: [_jsx(ChainIcon, { chain: chain, client: client, size: "xs" }), _jsx(ChainName, { chain: chain, client: client, color: "primaryText", short: true, size: "sm", style: {
                                    fontFamily: "monospace",
                                } })] })] }), _jsx(Spacer, { y: "md" }), _jsx(Line, {}), _jsx(Spacer, { y: "lg" }), _jsxs(Container, { flex: "column", children: [activeAccount ? (_jsx(Button, { fullWidth: true, onClick: handleContinue, variant: "primary", children: buyNow })) : (_jsx(ConnectButton, { client: client, connectButton: {
                            label: buyNow,
                            style: {
                                width: "100%",
                            },
                        }, theme: theme, ...connectOptions })), _jsx(Spacer, { y: "md" }), _jsx(PoweredByThirdweb, {}), _jsx(Spacer, { y: "lg" })] })] }));
}
//# sourceMappingURL=DirectPayment.js.map