import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronDownIcon } from "@radix-ui/react-icons";
import { iconSize, spacing } from "../../../../../core/design-system/index.js";
import { Container } from "../../../components/basic.js";
import { Button } from "../../../components/buttons.js";
import { Text } from "../../../components/text.js";
import { getProviderLabel } from "./utils.js";
/**
 * Shows the selected payment provider based on the preferred provider OR the quoted provider.
 * @internal
 */
export const PayProviderSelection = (props) => {
    const ProviderItem = (_jsxs(Container, { center: "y", color: "secondaryText", flex: "row", gap: "xxs", style: { padding: spacing.md }, children: [_jsx(Text, { size: "xs", children: getProviderLabel(props.preferredProvider ?? props.quotedProvider ?? "") }), props.supportedProviders.length > 1 && (_jsx(ChevronDownIcon, { height: iconSize.sm, width: iconSize.sm }))] }));
    return (_jsxs(Container, { bg: "tertiaryBg", borderColor: "borderColor", flex: "row", style: {
            alignItems: "center",
            borderBottom: "none",
            borderStyle: "solid",
            borderWidth: "1px",
            justifyContent: "space-between",
            paddingLeft: spacing.md,
        }, children: [_jsx(Text, { color: "secondaryText", size: "xs", children: "Provider" }), props.supportedProviders.length > 1 ? (_jsx(Button, { onClick: props.onShowProviders, style: { padding: 0 }, variant: "ghost" // Padding is managed within children as the button is conditional
                , children: ProviderItem })) : (ProviderItem)] }));
};
//# sourceMappingURL=PayProviderSelection.js.map