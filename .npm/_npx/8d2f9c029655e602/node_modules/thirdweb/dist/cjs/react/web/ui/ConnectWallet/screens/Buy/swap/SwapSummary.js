"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapSummary = SwapSummary;
const jsx_runtime_1 = require("react/jsx-runtime");
const CustomThemeProvider_js_1 = require("../../../../../../core/design-system/CustomThemeProvider.js");
const index_js_1 = require("../../../../../../core/design-system/index.js");
const basic_js_1 = require("../../../../components/basic.js");
const TokenRow_js_1 = require("../../../../components/token/TokenRow.js");
const StepConnector_js_1 = require("./StepConnector.js");
const WalletRow_js_1 = require("./WalletRow.js");
function SwapSummary(props) {
    const theme = (0, CustomThemeProvider_js_1.useCustomTheme)();
    const isDifferentRecipient = props.receiver.toLowerCase() !== props.sender.toLowerCase();
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { children: [(0, jsx_runtime_1.jsxs)(basic_js_1.Container, { bg: "tertiaryBg", flex: "column", style: {
                    border: `1px solid ${theme.colors.borderColor}`,
                    borderRadius: index_js_1.radius.lg,
                }, children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "row", gap: "sm", p: "sm", style: {
                            borderBottom: `1px solid ${theme.colors.borderColor}`,
                        }, children: (0, jsx_runtime_1.jsx)(WalletRow_js_1.WalletRow, { address: props.sender, client: props.client, iconSize: "md", textSize: "sm" }) }), (0, jsx_runtime_1.jsx)(TokenRow_js_1.TokenRow, { chain: props.fromChain, client: props.client, freezeChainAndToken: true, isLoading: false, onSelectToken: () => { }, style: {
                            background: "transparent",
                            border: "none",
                            borderRadius: 0,
                        }, token: props.fromToken, value: props.fromAmount })] }), (0, jsx_runtime_1.jsx)(StepConnector_js_1.StepConnectorArrow, {}), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { bg: "tertiaryBg", flex: "column", style: {
                    border: `1px solid ${theme.colors.borderColor}`,
                    borderRadius: index_js_1.radius.lg,
                }, children: [isDifferentRecipient && ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "row", gap: "sm", p: "sm", style: {
                            borderBottom: `1px solid ${theme.colors.borderColor}`,
                        }, children: (0, jsx_runtime_1.jsx)(WalletRow_js_1.WalletRow, { address: props.receiver, client: props.client, iconSize: "md", textSize: "sm" }) })), (0, jsx_runtime_1.jsx)(TokenRow_js_1.TokenRow, { chain: props.toChain, client: props.client, freezeChainAndToken: true, isLoading: false, onSelectToken: () => { }, style: {
                            background: "transparent",
                            border: "none",
                            borderRadius: 0,
                        }, token: props.toToken, value: props.toAmount })] })] }));
}
//# sourceMappingURL=SwapSummary.js.map