{"_id":"@walletconnect/keyvaluestorage","_rev":"43-fc4cd4129f3bbec24269047621b9a27b","name":"@walletconnect/keyvaluestorage","dist-tags":{"rc":"1.0.1-rc.2","canary":"1.1.0-canary-3","latest":"1.1.1"},"versions":{"1.0.0":{"name":"@walletconnect/keyvaluestorage","version":"1.0.0","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize","sqlite"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.0","maintainers":[{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"2733fc32c868f534419308f90b079fba0ef7d66e","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.0.tgz","fileCount":78,"integrity":"sha512-dlIrX/pCjuXMUprkLdy0hw0Ibr3To9nCdG19mPqd/lRdRWsPItBL+79LClVplMxb0cuF3qlTuGTNx/hmUKYmWA==","signatures":[{"sig":"MEQCIFY8UAEZWy9A+K2xOITICuHMVHuM1vCBsb+VE/qYkoh3AiBTk7lCxnHIr/x55XsMMqkYz9IACwRsG8K5PZXscQlpwg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":265360,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiWASFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmopnBAAnx3K26R3s5PlucTbSudXwuCvaQKRmN2ObSUydmzOdtBeEHph\r\n0NOCz1PaitrELL3yLOdnItQbKOeuQk6wYH3Vg+Mdm2jgt+DifHiBbN2FuM/0\r\nQDztURaQwqpBmii0kDHxVvQoUBWSJHSCm05sm6LzIgJRWmmtLibUwKuKie/x\r\nTtfWxocx9AhWTbSXOaztUarD/kctkK0C27pn7IRRdRm2+21xlAZ0ognUXsAo\r\ngRySBZ1rRf8M/PpIWsDvKsN7Uxr6iJDVDwf7JD2775Gw228hSq1NeSK2HN/8\r\noq51rYfX1Exrx9s+dJ+FnxdA2V2bDPyCBMawx/555mCSiKBPbnpLG2DQF8PH\r\nU9KJEJGJpGIwHhfovY9SfxusRewXDgrH8DX7G5G7TqVaXSPW1+4/zTbFIXph\r\ntj+hYxNrWjgJEVzyflpTBvbG7z6t3ZBj/zxSZuQxksd1qy9qRUHUFOV188Vb\r\nucHfRfqQo1xunXjkBQEtiTPLZ9eqMHoWmayMQ+4l1MLV/zYwoeq0Y4ctkdtg\r\niDHn7AmIgqeRiuJky9TE4cBN41ksa/EvsRWcQzoqo9xz6Dss5Je9A19Z87Sx\r\nAzIPjIoEPdMn2YEnRyw2pI9aPwr3F61azQAWWYhMNPvBdd5lpTi/gxT6Pu5v\r\nvUwlOk/uOQGmAzNPNSv3D6IrKpDaP8vEYw0=\r\n=amQo\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","husky":{"hooks":{"pre-commit":"run-s lint"}},"types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","browser":"dist/cjs/browser/index.js","gitHead":"5826423b8325f7cc32850998ec570d21a57677eb","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"pedrouid","email":"pedrogomes94@gmail.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.1.2","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.13.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"devDependencies":{"husky":"^4.3.0","tslib":"^1.10.0","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","better-sqlite3":"^7.5.1","@walletconnect/time":"^1.0.1","@types/better-sqlite3":"^5.4.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"better-sqlite3":"7.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"better-sqlite3":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.0_1649935493279_0.022469876571777014","host":"s3://npm-registry-packages"}},"1.0.0-49ca143d":{"name":"@walletconnect/keyvaluestorage","version":"1.0.0-49ca143d","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize","sqlite"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.0-49ca143d","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"5c01894575d80d3b1eb2e95caef38101941c5c93","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.0-49ca143d.tgz","fileCount":78,"integrity":"sha512-VwWEs4MKKwHSr0ttt18METhKyKfuXOVdk77buAO2XUgNKdbnOMU6rlehvINSet/FWjNXWTRlVSTOdI30qxPpsA==","signatures":[{"sig":"MEYCIQDMzrJcIM9l2AUfYOj50JHz9LnZ+nTzgymOZCaRZoCWxQIhAK+7OdnwrB+tW9HnyTJjpYcn/6dgJCxI+889nR9Hq+Nb","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":184281,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjEce9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqWFhAAhl40Ixzet/BWlpoYrBPw76L+9t2bqXhT120bwCknaBQL3Kc0\r\nJs1cFyPfutSiCoR57nyVS/ju+DxPGJgeE3ySJutFCNgO7Dv9tZnL8f/su4ex\r\ninXgZTviISCELyhKvAHIN8t6nJcq+BTnmCCdmaXF1tVbOQreyh1fQz6TxpST\r\nj8zvjNZzUATkPGffyLjM817kaaUV7q4y4gjsNIslVCo1HaSBwRDSwGY5gTKi\r\nk1Cd6K7q/Sc8zUaPI6kfFeQcuVvFlSj1MADvfgnWfzMTQZuGknAsUFanJkgT\r\nK5DlSsHQA3G9eZTU3hv6lv3UHqcu4A0MozXULNrhTCEqZBRsd3HxTs6C9Os6\r\nLv0uBX81/8uWlGFsibXdi1+ZyULxv6RtIf08BimWq8inmaLo0j8kds6qMMH/\r\nHNfYsOawe7jObh0r8uC50mdcsAet27wGg+vdOkwEo3PUrsphcw3ys/roMsFJ\r\n4scwsbvXZNvEQNa/SabGEQNwbLooXuBgG97HMhPUyGlfmUIXDWCNporCEhZW\r\nJ+46lmEYrqRpjMyroIYBFxuXlwVQ/WwXTKPlwXlimoJwLlq9Dykvafc/0XQC\r\nNU5/5NKKaURAW4SwOm4JseOMeBX7nAgPVEiRUv30/6xoQsKTtEnb6qSQBMd+\r\nNdkwQCb8C1M3pD2gcStmvkNZROLttk7k2jY=\r\n=Vx9O\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"49ca143d30bb16201c123969ab6d199271c5fb60","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"husky":"^4.3.0","tslib":"^1.10.0","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","memory-level":"^1.0.0","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@types/better-sqlite3":"^5.4.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"classic-level":"^1.2.0","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"classic-level":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.0-49ca143d_1662109629340_0.7021121626733244","host":"s3://npm-registry-packages"}},"1.0.0-e7baa6ef":{"name":"@walletconnect/keyvaluestorage","version":"1.0.0-e7baa6ef","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.0-e7baa6ef","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"6287112ddaf0aff9b7128841f809cca2f0e56b23","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.0-e7baa6ef.tgz","fileCount":78,"integrity":"sha512-EhYRDDeLDEgHt8l67F2OctupB5yuMPng5QaJgmwtvD5ULJYg5VUZn1NqXhDbfpoyTZ7Sj9FhYL5Z4JDAQI5B4Q==","signatures":[{"sig":"MEUCIGD3X80D20ka0P42uuuOEwnlzZXzndD//PF8TSMLCkMrAiEAquRknD4XSNH24h6bJQtMxmyNzUp2LCAB4WGn9FFLJXM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":185660,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjEdSXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpm2Q/9F6dPd7Sq/af/ONkeZsHx2fxMaCwJH69wzmHPMeYGD3y2S0Yy\r\nwsIb8topU0GOVIrxFgTdbHe72WAf4NJdxfC3MqdBuK3yIuzPM6rflRnD0ARQ\r\ntMa9QA/mws3qUMpwUkxv7pqO0yoABPfbvCtl2Gh2Rz1Gy+Ij2IKsBwUQyaoP\r\n9AuUrEtOwF+ouBXu0WmE3Due7XAnfqgWmY3zs2lRox3NgA90f8CgU7zan84U\r\n1WsnTKaZa6PNTNND/1Xr8s3Mx1C5bXJ1oU+vNrkSif32ofInyKjNjfbAjZED\r\n0jatoSVOSTmqByvcq43gnrAtQJBFDps3/1qAqYJx1HTLckP4GkuG7IeA93cM\r\nZ7YbP6EJHUreWmL4mgtXygpgq/xtXuZwGUO2FoYERDjjLkYX91AMzBXD+BgC\r\nUUV+ikVw18Zins9xwyx8MsVwHEdrJ+3iajVwGSOqsm+c8twxPlB/KQwVKq9K\r\nhxazCJvpLtI/BXkq9yGFMVi1Qujtod/iAonMV8k3mQfOJnITDPyS89lvQimi\r\n/kcfAEe36mGBmDwYgKTpsjWcK1ZJKNwgjaO1fD0J9SSrc2NuhSIYKaZUme5Y\r\n4QCOi06sjzBFz4WQ/Guvv+9sEQYwdkE+I2slIAYJxIAd+J7cuHxfe/PeN835\r\nSbfAt6UJwiVHG51ppWzuESgbyqUxFQilwGc=\r\n=rkSr\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"043c5cd4e24126096bca141ffd54553f467c975d","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"husky":"^4.3.0","tslib":"^1.10.0","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"memory-level":"^1.0.0","classic-level":"^1.2.0","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"memory-level":{"optional":true},"classic-level":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.0-e7baa6ef_1662112919664_0.5001941524956235","host":"s3://npm-registry-packages"}},"1.0.0-18aa85ed":{"name":"@walletconnect/keyvaluestorage","version":"1.0.0-18aa85ed","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.0-18aa85ed","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"ad0250781dbb54655cf67d163cc053e253cb7430","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.0-18aa85ed.tgz","fileCount":78,"integrity":"sha512-4XVOKKiyY76ZS0nR3zdILhd1s46SVhziEBYG4mA1c2z2+B0ZY6egSZ1m0DhLWz3cSmd99LuJBEON+d7zr4cELw==","signatures":[{"sig":"MEUCIQDhyZb/3hkj9D9N9vf5fW4cGvNH2B18vyzXWnOvRnP8eAIgBKJPwAZ2S6y3138giUNatzRmzFYLqOW8o2KYV//zMAY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":184492,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjEerzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr14BAAiu+VYr96z4LugJ0yDKE3KUIMWaAyBY1u6mPtwM/Ru+d8XZ3O\r\n+2AzrWyqmszY6sQC93xUXxtMlCRxjLXuungyb6nyBzmsm9RgPg9xxhPS2tYg\r\nndCjnvVjfbMRFZ7HYbs++YNOtdImOPqCe+U1x/fPFsSlBG5hUaD4R09RxIhP\r\n6soG/gITUfZuyzn67dNGaBSOD5Onq1U9Y92Xu1U7A+eH336KZkD0quQBZJ9q\r\nHXHbKespCZnnj92wB3ypVgk07wmITyMCWS2ByYKuXB7GpuaGdSxqj9gEftjR\r\nVnWVwVgMjPx5i+lbqpJVnLrK34cbtOZIEZtJ6lscZVaZ/3PFIUazC4mknD7M\r\nnB3PzqmVI0Ai6rgIE6EZFqBTwA0T+veu/MXzvkHoaQ/GDrVDtDZ2SZ28kJbA\r\npz/QAXXYL1dOF8eMjO1miJsOrfVdM0XHzpc6SU5jlu0Hh5MilTEpe5WSIvGY\r\nGwb0rxrmtjvYmG1M8V177nLIiKRJiuLNqPmVYVMfTXvqBh1i+Tk01xDNNvC/\r\nMXKk3y9Q1GKRPL50OcUzyeD6kaVcwtrvrNzVT0gdhXp/dMPU3OnqiSXzC1dx\r\n5ydHAU3BmSfG/iYoV8XJpS73MlXb+k4aCPGUOul1C4xLIbKjfoRiQp0PczxO\r\nQ1cbu5cYhLVPb33nIDiqsOOeS306r13UBgU=\r\n=VRW8\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"18aa85eda6ef92eb74d4208eea91dc5181d688f7","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"husky":"^4.3.0","tslib":"^1.10.0","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"memory-level":"^1.0.0","classic-level":"^1.2.0","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"memory-level":{"optional":true},"classic-level":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.0-18aa85ed_1662118642902_0.734069611043745","host":"s3://npm-registry-packages"}},"1.0.0-2e7a7497":{"name":"@walletconnect/keyvaluestorage","version":"1.0.0-2e7a7497","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.0-2e7a7497","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"78889f578801772bffe12397b24903529c397d00","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.0-2e7a7497.tgz","fileCount":70,"integrity":"sha512-cf0Ekb+p3VAG4AzPRI3AXbQ1G0DFFmgBUmuxZER68YY1+uEbI+BbYbPpLlywC+Rk4WK8klAZxk4b2wyP7eMn1Q==","signatures":[{"sig":"MEQCIBnHnuwX0apMalk5Yijr3Tdk4+LybQ7HK2t74oHK/5qEAiAavkdIFiSfKASJP0mWUJr3v0Uz4vX7B21IV54rVeUVKA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":180731,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIC+tACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp+Lg//V+qHAiuCvEE1/U9x3hyzFesMel4xcywSU1z9sN1UwD44VIBl\r\nE0rMOOjMi29aTJJzyu4Z9ctrlftuujlMmq4mbsQ5GF81yVs0BUpXS2K1ZwCw\r\nWItmd+SDlUBLds921zS4iVrADzcgCPkYHSKdT/xJF8mDpK15OCujNIwPKIHC\r\nMIHypYxek8FUqpdwMwYbQmzIk6rPqcCHIxGXC/C1AfuPL6rWQSORChYKoMuF\r\n3kO9hsxytNnInnT3n8iE0pkRrFpBLXtkdmAkP2sOgEdbkFBRvgdMvq+E5WN9\r\nVemMsWvza5cGGjhszbAHNECENWdwEyjGMi0zR6dR+l4WNYY+ouNW4s70m/LO\r\nd5WLYtOPn1Ehs92IBaE5cspAdS8c0nzQDWAnRbdQ5rRHxwz6FOG8djzkq1s0\r\nNunTCBENPt1xRMxSSX7z3hWNMiPuiSRxDouWtEhUMPI15qoz7TRgChbwczO4\r\nZX34jfBhjw9RkATaDi6pf3xnSkeRIl2TIchaPpguk5AEBAusWB6lUSMAbqG5\r\nxhohYrm8+QSbT8q4Pj/dT6rT/RGpevhi9lLZ8ERnBmHN+CMvgubFm4/79o1t\r\nIeRgDX2LwRJlOe2s8KHhPeU2aZxt5AAKVFLrSInkG6I+E8g1Ew6VgBJz0g1T\r\nu+gspYXBTHbSJrImjLUArYiRs3Zu376IJkc=\r\n=2axr\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"2e7a749782d41e846b6cc2d7b419806954f92a6b","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","husky":"^4.3.0","mocha":"^10.0.0","tslib":"^1.10.0","lokijs":"^1.5.12","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"lokijs":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"lokijs":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.0-2e7a7497_1663053740877_0.015657509268382164","host":"s3://npm-registry-packages"}},"1.0.0-64a80ca5":{"name":"@walletconnect/keyvaluestorage","version":"1.0.0-64a80ca5","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.0-64a80ca5","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"085b86f3a1733d64f215f51a1b1031daa64ae4b1","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.0-64a80ca5.tgz","fileCount":78,"integrity":"sha512-U3D7G4iItNZYLqikV450wul3KHnjiJ6Dz22HKycvgo+Jm75WDqAgwkMJKD9BFrINTVCKTWLQpyk/Kr51jF7Z5g==","signatures":[{"sig":"MEQCIDHUVN3lGHcXrVCGGaieW/mx6klb8cXslQ60fWUP0kapAiB5RAxITFpcy/RJS3APbk70pStApUeXvgkJjybmuO7gWw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":189169,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIYDUACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq4lw/7ByvL0CSqtvt9O/mEHtZQce3OA4wH+KmqYg2tMsN2EvW7F60I\r\n9rH/qs9hnXe/YEko2CSDdoL+W/wrrslBqtYWYyYTXbWtkODQ0T6seGzg16vn\r\nQkmYttrdSBVhTnDE1+KkuBPHgLF1t9cgcfJ2eiNfyRU4KDcM4MZ7dJw0NTbB\r\n0NWv2fy5Or/O2ns+aP2zl/VRDnGVO/Cc0bpGkR11+hX0EMC+Mp+XlX/ofZbS\r\nv2c3KqXnPfhmLJ1FQAYgMdNN4Gz7OMPnxX2llN+W0rfo4HiSxyPngbCHJbXf\r\n1sc17b7N3XlgRGqP2RWhw2wwFmMXhH8xiyHPUhHbsDzx0BX+7eU8vBnafIqO\r\nvBGNl49UyAyR0/08d/RQola3TKyx+ttzU4qOa1I3Jk0mTH6xg3wswgl5japx\r\n9WMIFE1eNCeoarHYf6cwDtWPd+0cmb9TDe2Bllihdr4O6VnVME7IlYsiQtEn\r\n95YHymcLDiHAKvYFJflrBkLRJhZYJcHexeK8xQSpsWfZKEqASB934OsJSgIw\r\nTCMtpDU/rL5FsUOFT3+UiWKJapqXllfm9wDegPFsaJpiNTmCZszxxuRa5EKI\r\nLo3eh3t98xZwlOd7QYq7rh+LwwoY2vIhBK+Ye5nKf+c8mYZr5cwCMPy/ncjE\r\nacqwH/9a6EO9UVK9Umj7SwMf9CTqDMiouks=\r\n=vuSG\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"64a80ca5b21721b7aea187f5303119108cb6fbbf","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","husky":"^4.3.0","mocha":"^10.0.0","tslib":"^1.10.0","lokijs":"^1.5.12","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"lokijs":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"lokijs":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.0-64a80ca5_1663140052373_0.4362982319301407","host":"s3://npm-registry-packages"}},"1.0.1-rc.1":{"name":"@walletconnect/keyvaluestorage","version":"1.0.1-rc.1","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.1-rc.1","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"a8bb9efe5ab0877a051156cf75838ba5bc6e7e77","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.1-rc.1.tgz","fileCount":78,"integrity":"sha512-ykx0iPK0ZDk7WMPFf00I9DjDZ/rRmO5KiUZXE1hTyYn1kKDrudHxL+Xz2nf3qWDeLSGnp9F8vxoVl4BBt8Hc0w==","signatures":[{"sig":"MEQCIDtKec3OYwbnitDqBTC22stq3to8KYRO5v5mPbgnbEtyAiB00bBUGYAaXUWbijB+Rom/jLJzQhEfiXQ7RZpwqyTejg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":189262,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKsg2ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqPLA/8DSgfxoGAq0oldufrtfTPUOqu0BCGWM6hfms9ouUeEwRK00pl\r\nY5vXqxUk3CahQrqSj3K4oCYBY1iz1l5as5SWhA0xp6n8r3BNwVoCIto5fxXU\r\nYSM57+3uU/q+U2L6ZR6B1KqtUJfY0QyTwNL+4gc32ZrYG4ejSl0KtIEcAtGA\r\ngiVOyJCtZz+2RXZyVvX9ETIF0Zg7Aex9ePNodFWKUPEm/ueu2n7mMwLrAtWV\r\nr8oLr3SZCbE1ucUcS74uIiqz1IItQ4AjlGrcx/zqK9XTtnyfvMs5uYF3Dy9g\r\n3UXks24AFk6+DwEMg8gg6pkst07KwwEXwDKT/7bm6/eXI+rrg/XbMQFzCpuI\r\nVDkKQHFHA+4ZuwYOh7Pqu+1aeMWIrAimHe1hyY8FHGHDPkqZXZ/P4LE7dyZO\r\naedIUwm9kqWXMq0yyMcjLbrdyZ0fLsfIX/9CvMr6qQei9xiUEtcC/6GbLs4v\r\nGKAJGN3MRA4FdfGa2KSa/a3+JD6WMuNwjkLHMxG05ZkQMxe9JUhwrs0fOhcX\r\nszPG6az5C7YaiMnl8F3qvIIYWsaqgMa7fCDnvOeQOwahTOVOSP+Ss6EA18VA\r\nvgvBNVS4S2Kg/e3MetbX51OPkQiMpmJOMRJBCMTmqa8YCSzOjQbSG7zdtdmG\r\nKHlMhhp4OGXWC/bwnRI5QHxjXTJmWsixnqA=\r\n=exd1\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","husky":{"hooks":{"pre-commit":"run-s lint"}},"types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"847e4177df60769ad882798c55cb13cfa0953b14","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","husky":"^4.3.0","mocha":"^10.0.0","tslib":"^1.10.0","eslint":"^8.23.1","lokijs":"^1.5.12","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"lokijs":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"lokijs":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.1-rc.1_1663748150459_0.9048458734173799","host":"s3://npm-registry-packages"}},"1.0.1-rc.1-1c715f7f":{"name":"@walletconnect/keyvaluestorage","version":"1.0.1-rc.1-1c715f7f","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.1-rc.1-1c715f7f","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"b6d674b8e8c37b4b8a3b9340fa95c15a2ffb8ea8","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.1-rc.1-1c715f7f.tgz","fileCount":78,"integrity":"sha512-Vk43c61knayYofGBIXUCQKRfMEdVEOSNixksD+8aCdrbDEeVD02IAqU3Ffs8LpOIZ4pIE7teOqNVHi4EEhRpmQ==","signatures":[{"sig":"MEYCIQDohJo5wJgrLVux45Y8DFl8CLVAFH6uATErHELLvWbfLgIhAOuH7VrdRlXIuBQHFYXywefrLOYx0Cgsc9CQlwNBIvru","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":191387,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjLU8mACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoZfxAAhszQAAe8TsCEwEChO5gGp9oibWHFA67JNWNgFJU+GiOoA8bd\r\nyVw6iHKVoxxj9liV3UCpVw8uOf4H/fCwN2ly6PqcuOxLEQGekWSS4rhhqjMN\r\nYWwdvxE/+YeTSVij8FgEm/0zSWfWNpGNSuEwHP40cugIgXQulvfcR7xO7Hng\r\nvbcWt4Zg4SF3ez88zew/ai0z0l4kn8tGS02LS2F/ej2hGxCcIJAm+acHyoja\r\nUJfWI4SEC0lPef4NW5Qj4gWwNw12lK3mSrVqfhAOIZWtkJFg534foEckdhDD\r\nc4S7r/obTZI6WTPWWnicK8cm1PRXQKhRyZRKBP+sLbc6/M2yMvMKkSGRM0qW\r\n2mF2ougLyjCqtoU0y5cNc9EetEEfXhrLfi9HhajCTBvYo2xvVvcWQRqJo06U\r\nzM+76ny5JjmkttEdJ+447la9CQ0NQHEUYSpqqmzYrk100C9V5JSU0vqmS/Of\r\noHMiGGIeS563CONAkva4wHRSswiGImSD8xarkE/dxmL5Y1hef6bntX112DeR\r\nlTTARnzx6dMO0GOF8dMi7QoI0S5kqb6qSJC9marpK7WAK7qc+Z1nMdhY8jB5\r\nVuDMS4o9rf/vaefauKlSFgCXv+XWg3Zlm3lp4+HJisjRrAm530NYRUYuNbBU\r\nC6ucaiQAkteHKdRsuL0QFUofQGOJPmIDa6U=\r\n=8WsQ\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","husky":{"hooks":{"pre-commit":"run-s lint"}},"types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"1c715f7f965cd6da687197c02544b74f062dd0a3","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","husky":"^4.3.0","mocha":"^10.0.0","tslib":"^1.10.0","eslint":"^8.23.1","lokijs":"^1.5.12","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"lokijs":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"lokijs":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.1-rc.1-1c715f7f_1663913765765_0.19575916080069944","host":"s3://npm-registry-packages"}},"1.0.1-rc.2":{"name":"@walletconnect/keyvaluestorage","version":"1.0.1-rc.2","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.1-rc.2","maintainers":[{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"d1dafec01a0e33fe3b70ed22e24fe5c5f0a09b37","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.1-rc.2.tgz","fileCount":78,"integrity":"sha512-W704vnzAAZ4b/v7vEvYDul7fZ+TtG2vIfw8J41N8DnfBeee3IZ/urSrsAPaNUcDZArAWv/ZOYrIGHz5K9sdeUA==","signatures":[{"sig":"MEYCIQDgnu3XPP+6S5hsHriYmLzAl2OOqUlL/+jhtzLrsmN/wAIhAPLBFew2mH4vZ02qBwSFKTBy8EwUVqr+zY8dRJeqZJR1","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":191378,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjLVL8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrSwA//Y0NQ3OfBrHSS03YwKqlmnnQ3BfNi9v9e7naYulfSOC+xcwcH\r\neMynz9b/Kh07jzNn2jDP141/L/iYbVuJB28x5efZXN4BQ2zU+VhOkphZI/di\r\nrzW03ns3hkYLmHOMmqxjq0UM5eDu0PRxUTT/Uybw6H7hAakDJdTXKyc4Fhk5\r\nM4zeQStz6vi5G+kcyrB+I2ei+H8U4fZz0ojICg41KsIi+TUbdkEEO6eLZyO0\r\nYRHwf6Jct8R38KeRbj0nk2J3Ds90UOVA5UNywNr2oOrlF09S52tZXyFt147Q\r\nPUIHyJOQNoYHNuR16yUwfv0nTvoUAMr2w2+2sFIA3LuG4mPvTC6yMhrQKbMx\r\nSnPV/OdVXQoRDL6kTU+q/NzO0zR1mDs1cAaqB/C2H4V4lI8ZjetqxnyLtW7C\r\njWDBtYgcRGUQfIpQo7UR7fJWA8JVush2PnUwYuyse31YiS582BaxVES4Hg+B\r\nzZYM1+dHRcdolnA3GZvkOOnDiAX58sKwFPB9QFaJoGt9737LILAqagtMG9lp\r\nC+woiaitYrWMA/np3bCKUkEC6ZnJOQdY7oooPN7xfruvRPBjFLRSYU+41j2D\r\nfB5X9gcxSF1l0BigZy0qcU2yLF5qXW72gwtdm3hXnqOzkInR7dTp8XRRto6B\r\nOZiudYPMuKqEGa97plKR+I3+SEvXW4hCPcw=\r\n=/SCu\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","husky":{"hooks":{"pre-commit":"run-s lint"}},"types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"1c715f7f965cd6da687197c02544b74f062dd0a3","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.11.0","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.16.0","dependencies":{"localStorage":"^1.0.4","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","husky":"^4.3.0","mocha":"^10.0.0","tslib":"^1.10.0","eslint":"^8.23.1","lokijs":"^1.5.12","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.1","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"lokijs":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"lokijs":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.1-rc.2_1663914747796_0.7760178817002485","host":"s3://npm-registry-packages"}},"1.0.2":{"name":"@walletconnect/keyvaluestorage","version":"1.0.2","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.2","maintainers":[{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"sbc64","email":"sbc64@pm.me"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"92f5ca0f54c1a88a093778842ce0c874d86369c8","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.2.tgz","fileCount":86,"integrity":"sha512-U/nNG+VLWoPFdwwKx0oliT4ziKQCEoQ27L5Hhw8YOFGA2Po9A9pULUYNWhDgHkrb0gYDNt//X7wABcEWWBd3FQ==","signatures":[{"sig":"MEQCIBzA83gkxiydSWdhARgtnVwydWcDWIgBrunOOQaWlxfRAiBwx09gSLNQMu1A95XlpcMY7qx/rcV0JOG1vOmXHZ5a8Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":290814,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjgJV4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpFEg//TfFEzjPWMe/Tvcp7vqAFDQ752oA/0Xu9K38Z97NwAOjpRyUn\r\n/9ZEzhJdceZ2BOkuMZ/ZT1Z7TamTFYZt7Kyp8PaeGNDhaShp9YHF/noVbwww\r\nzsj8kDdJjOiaNns7m1fDXG9qecx3S7heTcK/iVNlQ3SfIydhh7WooyPzIuT0\r\nx2VteGyKl/XhcNmjjbcdMKIePsBKwt5vLkBU5EuhTNtEEo+FEYRAEVh9n0zY\r\niam0CueLbTxfxhgieT1uj9LWTEdfPLt/GribiLlRI6DESPhP0PDavUB9H3uw\r\nTehojwazA7ZiS8O8fQEKYWe9QaY1uiOLIE7aSipK8RdhpDZ+XwM7kA7nhKG3\r\n+zGcJP4c1HhNnrBA1Gpf+gN482BsubfyiHRET5AKVVVpUa//iWjqEfRjo7dz\r\nyrJj9iDGK5oj1mz3203hPqv3t3h2mO3uNonyLZbaQn05mcG7eARGNsbJuh3/\r\nfX6isx+LLkkJC3j5kzTLiW7KzKYY9U5Ae4TpNpb1R1B8oEUls/z2yQYTiXzp\r\n3uUrqzsdSPrWkpBSJj3f+btl+fy+29czFJbTkW1bnh1seP67m3CNVLgusVtB\r\nVHY4+HW63+SAkYXH+PjYSb+h7iiN+cVOI/RAQjiEAIma+/GGA2s/vz2P5YEj\r\nREZjxydEot9wUrNm7S/PBh46PbNCwR1iHMk=\r\n=bs1o\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/cjs/index.js","husky":{"hooks":{"pre-commit":"run-s lint"}},"types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","browser":"dist/cjs/browser/index.js","gitHead":"81bc9b0859b6875d35697177ec21e2d01457403b","scripts":{"lint":"eslint -c '../../.eslintrc' --fix './src/**/*.ts'","test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack"},"_npmUser":{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.1","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.17.0","dependencies":{"tslib":"1.14.1","safe-json-utils":"^1.1.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"devDependencies":{"chai":"^4.3.6","husky":"^4.3.0","mocha":"^10.0.0","eslint":"^8.23.1","lokijs":"^1.5.12","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^3.7.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"lokijs":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"lokijs":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.2_1669371255918_0.40587002148828977","host":"s3://npm-registry-packages"}},"1.0.2-canary-e580314":{"name":"@walletconnect/keyvaluestorage","version":"1.0.2-canary-e580314","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.2-canary-e580314","maintainers":[{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"6dba8dcc6573239f26ecaa25d77642a0b2b423db","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.2-canary-e580314.tgz","fileCount":94,"integrity":"sha512-SodRDZf9X514zuoD6kToK5oQlqCLyXRMwHx82ne620MGQyhTiF6n0Y5D1QuY2N9lWM3gZXLIwb3R8zlH8o+08w==","signatures":[{"sig":"MEUCIQDuZIWwpZpue8nI7sI5B6CBnlW/PGFt4kzw8JKsM0HoXwIgXcjeo45sEfEhhknAJaWufFM8HLXzMM86KdUbPLUrmMg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":143437},"main":"dist/cjs/index.js","husky":{"hooks":{"pre-commit":"run-s lint"}},"types":"dist/cjs/index.d.ts","unpkg":"dist/umd/index.min.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/cjs/browser/index.js","gitHead":"6c21820674371ba584806393071caf16de580314","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"run-s clean build:cjs build:esm build:umd ","clean":"rm -rf dist","build:cjs":"tsc -p tsconfig.cjs.json","build:esm":"tsc -p tsconfig.esm.json","build:umd":"webpack","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"prettier":{"semi":true,"printWidth":80,"singleQuote":false,"trailingComma":"es5"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"tslib":"1.14.1","@walletconnect/safe-json":"^1.0.1"},"react-native":"dist/cjs/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","husky":"^4.3.0","mocha":"^10.0.0","eslint":"^8.23.1","lokijs":"^1.5.12","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^4.9.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"lokijs":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"lokijs":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.2-canary-e580314_1685615212319_0.5776252280787995","host":"s3://npm-registry-packages"}},"1.0.2-canary.0":{"name":"@walletconnect/keyvaluestorage","version":"1.0.2-canary.0","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.2-canary.0","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"6c374fd45ae32d11058c6c284d354d364b914912","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.2-canary.0.tgz","fileCount":28,"integrity":"sha512-ApiqjTKHfPK9bMU14ciBW6NixxUCjkfdGtoh4eZ7oE7fd+ae7EnvaKSJBrpt9Qg7vPLU9YbAl9/DwzlFOX32fA==","signatures":[{"sig":"MEUCIEXiPcbwanEnVbUnQsgD+0YXsgjyDuyIGF/e1HbG/jPtAiEA3LpX/e8u6ECbTQ/6c3NyIBlgKgdAKDWlLFP73HPX/08=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":94657},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/index.es.js","gitHead":"bcf3551a5cb541db37585259f2cadadeead29ae9","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre; npm run build:source; npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"@walletconnect/safe-json":"^1.0.1"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","unstorage":"^1.9.0","idb-keyval":"^6.2.1","proxyquire":"^2.1.3","typescript":"^4.9.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"unstorage":"1.x","@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"unstorage":{"optional":true},"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.2-canary.0_1697020914571_0.36224958231846327","host":"s3://npm-registry-packages"}},"1.0.2-canary.1":{"name":"@walletconnect/keyvaluestorage","version":"1.0.2-canary.1","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.2-canary.1","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"90af88d8c71bf4d6bd079754396984daa187a848","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.2-canary.1.tgz","fileCount":28,"integrity":"sha512-OIdRwa9NpGub12Wj1jpxIHXD8ckwp7aRU+SGCrocmcJ/XwWRaXXwlEIQtzL2n0amn0DsnWWpp9Z7hWXgZgRFXg==","signatures":[{"sig":"MEMCIBfP8GY6qpQjlhQ83MDsJPS8ILMVcQzzsWV3IMCnA/iPAh83Vax3wjOjlV9q5AoPjzD2kncXY2bL29nwrjKjv727","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":94584},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/index.es.js","gitHead":"bcf3551a5cb541db37585259f2cadadeead29ae9","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre; npm run build:source; npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^4.9.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.2-canary.1_1697021406907_0.45167009573046135","host":"s3://npm-registry-packages"}},"1.0.2-canary.758d7ff":{"name":"@walletconnect/keyvaluestorage","version":"1.0.2-canary.758d7ff","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.2-canary.758d7ff","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"1639ffb98c043ec48024e490f1556c8951c9ee21","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.2-canary.758d7ff.tgz","fileCount":36,"integrity":"sha512-Y9tx4auB0aDOQ/6BeLrkSmdXVmIoEvLbiClddpACUXdkC0ODNLW4deCexLePYGY3jdSBT8ysc0z/EnaIa28YsQ==","signatures":[{"sig":"MEQCIE6ergm7uUcXdJqDzHl2PqRnAJp0tCf1R8yYA8kW18s3AiB77I0CyeSTjg5umT6vtgVpd6B9bv4FxbxrLlqGInW7rw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":122651},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/index.es.js","gitHead":"982083a0dc598ab8eee498454090f3b46758d7ff","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre; npm run build:source; npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^4.9.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.2-canary.758d7ff_1697110840924_0.10729463556028418","host":"s3://npm-registry-packages"}},"1.0.2-canary.fd2778a":{"name":"@walletconnect/keyvaluestorage","version":"1.0.2-canary.fd2778a","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.0.2-canary.fd2778a","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"ff96fc5b999a78633d679d33cd9b6b6b260043a1","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.0.2-canary.fd2778a.tgz","fileCount":36,"integrity":"sha512-aRZs4pNDIVAKfKmxTxhTUb44RURU7XYIj2s+RBhDOG85dg2KiY6ftqZyxkTgy+iza3UDcAZ2A63molu1O/O86Q==","signatures":[{"sig":"MEYCIQCgNdcSIUUibZaTlzwtju/eC6jba0yJs0GvzCZhhRpFQQIhAKgD0r/COJZIgUXUSYxbVBDe1c5Ox6yyjPCDR7Ty26wF","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":122171},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/index.es.js","gitHead":"f61a89d2bc44f8ca897b54c9921a1681afd2778a","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre; npm run build:source; npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^4.9.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.0.2-canary.fd2778a_1697111650498_0.5651320728635301","host":"s3://npm-registry-packages"}},"1.1.0":{"name":"@walletconnect/keyvaluestorage","version":"1.1.0","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.1.0","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"782ad09af71e5241147fd7479f8814bd8ab8bb38","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.0.tgz","fileCount":36,"integrity":"sha512-CjDBs1WmLGstYRoxWx9oAskTKj1deu7gvPycxZo2jYMa85hAYe762AITKWW1i2OJ8y9+5WJTGDAy3inVl8pjtw==","signatures":[{"sig":"MEUCIQDhWEUyobvDiLyJkY8wMfijkPoGKtxeZLdRqMe1TLS6ZAIgd8ru86eoCPvxvSEAIMRtfd/Vc6ByJ5sRaRyrSQmpby4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":114797},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","browser":"dist/index.es.js","gitHead":"03c7ef37ce1136c3f67f12ea6aafe744fa86a54e","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre; npm run build:source; npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"_hasShrinkwrap":false,"devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","typescript":"^4.9.5","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.1.0_1699602727071_0.9779630162476083","host":"s3://npm-registry-packages"}},"1.1.0-canary-1":{"name":"@walletconnect/keyvaluestorage","version":"1.1.0-canary-1","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.1.0-canary-1","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"15e00dbc85ce023ed151b8e4ac33d132cb3b4473","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.0-canary-1.tgz","fileCount":37,"integrity":"sha512-dWQpFWL9oA03y21+3HJ+gKurrGJVfMADDuhCkCsmuPS3Ay6XxA6tixkToWv2Id3nQ/BmhZjYMxkMqbHQHfC3Xg==","signatures":[{"sig":"MEUCID+cN+v91Sxz9FjAP+ihmPPcQhVG2vMNU1ZrRnnTvPXKAiEA3a63deY4cUz/yyK+rvsd97pvLGu1xvIJgt2RG7FzTQM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":123817},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/index.es.js","gitHead":"17ff53fe0d17210f50da0d608c59f065896f9d8c","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre && npm run build:source && npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"react-native":"dist/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.1.0-canary-1_1700038815804_0.7323118712174161","host":"s3://npm-registry-packages"}},"1.1.0-canary-2":{"name":"@walletconnect/keyvaluestorage","version":"1.1.0-canary-2","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.1.0-canary-2","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"9c7c80402b038c04aa6ed7aca532a06d1ed9d0fb","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.0-canary-2.tgz","fileCount":37,"integrity":"sha512-f7D90/Qpg1S4Fd9Q6nF8GUedzwa7TJ4IkdFHS0Fc6Pzc1+zgICZgtecbyZhAaeJImnKSZe4bnZ8h89naEkxdbA==","signatures":[{"sig":"MEQCIBwdN8Sa/kBLMgA0Os1KYBne8AoBq0umykVZ2QbLc0ejAiBIEf4fIbdCNqFmscYyxaZi+ZhMoEtmAxoxmMNCJGcj3g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":99252},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/index.es.js","gitHead":"17ff53fe0d17210f50da0d608c59f065896f9d8c","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre && npm run build:source && npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"react-native":"dist/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.1.0-canary-2_1700039440781_0.09031908474366457","host":"s3://npm-registry-packages"}},"1.1.0-canary-3":{"name":"@walletconnect/keyvaluestorage","version":"1.1.0-canary-3","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.1.0-canary-3","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"57e8d3cfc90627513799553f562f5666c24cdf08","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.0-canary-3.tgz","fileCount":37,"integrity":"sha512-h4tFGh4dWTLfIlPBuz8N0eVf2+97Z6dLVpBvDejkdu3zV9yRo8qq/jKiqXNCcomkUNncKjoR117jjzL/C8zQ/w==","signatures":[{"sig":"MEYCIQDZmFlnnTXASNyvxGoOawehF7JKnmjlQsrkWrG/+qqFvgIhAOViRX0MSM3SIwwzEd8BxTgF53lbmd8/NL2yGnumkvI4","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":98927},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","browser":"dist/index.es.js","gitHead":"17ff53fe0d17210f50da0d608c59f065896f9d8c","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre && npm run build:source && npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"react-native":"dist/react-native/index.js","_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.1.0-canary-3_1700039959552_0.7336272147284453","host":"s3://npm-registry-packages"}},"1.1.1":{"name":"@walletconnect/keyvaluestorage","version":"1.1.1","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","_id":"@walletconnect/keyvaluestorage@1.1.1","maintainers":[{"name":"nachosan","email":"ignacio.santise@gmail.com"},{"name":"boidushya","email":"boidushyabhattacharya@gmail.com"},{"name":"huxwell","email":"huxwell.fsociety@gmail.com"},{"name":"chris13524","email":"chris@smith.xyz"},{"name":"crypblizz","email":"tom.terado@gmail.com"},{"name":"devceline","email":"celinesarafa@gmail.com"},{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},{"name":"iljadoesdev","email":"ilja@walletconnect.com"},{"name":"bkrem","email":"ben.kremer@hotmail.co.uk"},{"name":"pedrouid","email":"pedrogomes94@gmail.com"}],"homepage":"https://github.com/walletconnect/walletconnect-utils","bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"dist":{"shasum":"dd2caddabfbaf80f6b8993a0704d8b83115a1842","tarball":"https://registry.npmjs.org/@walletconnect/keyvaluestorage/-/keyvaluestorage-1.1.1.tgz","fileCount":37,"integrity":"sha512-V7ZQq2+mSxAq7MrRqDxanTzu2RcElfK1PfNYiaVnJgJ7Q7G7hTVwF8voIBx92qsRyGHZihrwNPHuZd1aKkd0rA==","signatures":[{"sig":"MEUCIFpmwo9oPSRZuJXFAn5btJ1Ji8lW63j379mkeeSABMRdAiEAyOOYcXHvSI2Eje6esN7sIhLojxi8ty+0Un7qU9w7Tn4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":84166},"main":"dist/index.cjs.js","types":"dist/types/index.d.ts","unpkg":"dist/index.umd.js","module":"dist/index.es.js","browser":"dist/index.es.js","gitHead":"7f79dc52148562684bb45cc9d519c8b4efbed423","scripts":{"test":"rm -rf ./test/dbs/* && env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts","build":"npm run build:pre && npm run build:source && npm run build:types","clean":"rm -rf dist","format":"prettier --config ../../.prettierrc --write {src,test}/**/*.ts","prettier":"prettier --config ../../.prettierrc --check {src,test}/**/*.ts","build:pre":"npm run clean","build:types":"tsc","build:source":"rollup --config rollup.config.js","prepublishOnly":"npm run test && npm run build","npm-publish:canary":"npm publish --access public --tag canary","npm-publish:latest":"npm publish --access public --tag latest"},"_npmUser":{"name":"gancho_walletconnect","email":"gancho@walletconnect.com"},"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"_npmVersion":"8.19.3","description":"Isomorphic Key-Value Storage","directories":{},"_nodeVersion":"16.19.1","dependencies":{"unstorage":"^1.9.0","idb-keyval":"^6.2.1","@walletconnect/safe-json":"^1.0.1"},"react-native":"dist/react-native/index.js","_hasShrinkwrap":false,"devDependencies":{"chai":"^4.3.6","mocha":"^10.0.0","ts-node":"^10.9.1","webpack":"^4.41.6","deepmerge":"^4.2.2","proxyquire":"^2.1.3","@types/jest":"^26.0.15","@types/node":"^14.14.7","webpack-cli":"^3.3.11","classic-level":"^1.2.0","@walletconnect/time":"^1.0.2","@react-native-async-storage/async-storage":"^1.17.3"},"peerDependencies":{"@react-native-async-storage/async-storage":"1.x"},"peerDependenciesMeta":{"@react-native-async-storage/async-storage":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/keyvaluestorage_1.1.1_1700056387782_0.044617212173704957","host":"s3://npm-registry-packages"}}},"time":{"created":"2022-04-14T11:24:53.211Z","modified":"2025-05-07T19:23:08.429Z","1.0.0":"2022-04-14T11:24:53.505Z","1.0.0-49ca143d":"2022-09-02T09:07:09.552Z","1.0.0-e7baa6ef":"2022-09-02T10:01:59.876Z","1.0.0-18aa85ed":"2022-09-02T11:37:23.097Z","1.0.0-2e7a7497":"2022-09-13T07:22:21.027Z","1.0.0-64a80ca5":"2022-09-14T07:20:52.580Z","1.0.1-rc.1":"2022-09-21T08:15:50.820Z","1.0.1-rc.1-1c715f7f":"2022-09-23T06:16:05.986Z","1.0.1-rc.2":"2022-09-23T06:32:28.030Z","1.0.2":"2022-11-25T10:14:16.080Z","1.0.2-canary-e580314":"2023-06-01T10:26:52.500Z","1.0.2-canary.0":"2023-10-11T10:41:54.771Z","1.0.2-canary.1":"2023-10-11T10:50:07.087Z","1.0.2-canary.758d7ff":"2023-10-12T11:40:41.214Z","1.0.2-canary.fd2778a":"2023-10-12T11:54:10.698Z","1.1.0":"2023-11-10T07:52:07.269Z","1.1.0-canary-1":"2023-11-15T09:00:16.091Z","1.1.0-canary-2":"2023-11-15T09:10:41.118Z","1.1.0-canary-3":"2023-11-15T09:19:19.734Z","1.1.1":"2023-11-15T13:53:08.171Z"},"bugs":{"url":"https://github.com/walletconnect/walletconnect-utils/issues"},"author":{"name":"WalletConnect, Inc.","email":"walletconnect.com"},"license":"MIT","homepage":"https://github.com/walletconnect/walletconnect-utils","keywords":["iso","isomorphic","store","storage","localstorage","asyncstorage","sequelize"],"repository":{"url":"git+https://github.com/walletconnect/walletconnect-utils.git","type":"git"},"description":"Isomorphic Key-Value Storage","maintainers":[{"email":"ben.kremer@hotmail.co.uk","name":"bkrem"},{"email":"alexanderderekrein@gmail.com","name":"cyberdrk"},{"email":"npm-org@reown.com","name":"reown-npm-org"}],"readme":"# keyvaluestorage [![npm version](https://badge.fury.io/js/keyvaluestorage.svg)](https://badge.fury.io/js/keyvaluestorage)\n\nIsomorphic Key-Value Storage\n\n## Example\n\n```typescript\nimport KeyValueStorage from \"keyvaluestorage\";\n\nconst options = {\n  // required for React-Native platform\n  // package from @react-native-async-storage/async-storage\n  asyncStorage: AsyncStorage\n  // required for NodeJS platform\n  // sqlite database connection (in-memory supported)\n  database: 'foobar.db'\n  // optional for NodeJS platform\n  // sqlite table name (default: 'keyvaluestorage')\n  tableName: 'keyvaluestorage'\n}\n\nconst storage = new KeyValueStorage(options)\n\n// setItem\nawait storage.setItem('user1', { name: 'John Doe', age: 21 })\n\n// getItem\nconst item = await storage.getItem('user1')\n\n// removeItem\nawait storage.removeItem('user1')\n```\n\n## API\n\n```typescript\nexport class IKeyValueStorage {\n  public getKeys(): Promise<string[]>;\n  public getEntries<T = any>(): Promise<[string, T][]>;\n  public getItem<T = any>(key: string): Promise<T | undefined>;\n  public setItem<T = any>(key: string, value: T): Promise<void>;\n  public removeItem(key: string): Promise<void>;\n}\n```\n","readmeFilename":"README.md"}