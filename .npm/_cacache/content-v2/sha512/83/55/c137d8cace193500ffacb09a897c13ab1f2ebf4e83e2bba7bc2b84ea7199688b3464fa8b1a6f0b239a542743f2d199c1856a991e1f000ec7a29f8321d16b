{"_id":"@safe-global/safe-core-sdk","_rev":"25-e726c5ffc303690ccc2ed788af9fca80","name":"@safe-global/safe-core-sdk","dist-tags":{"latest":"3.3.5"},"versions":{"3.2.0":{"name":"@safe-global/safe-core-sdk","version":"3.2.0","keywords":["Ethereum","Gnosis","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.2.0","maintainers":[{"name":"mikheevm","email":"mmvsha73@gmail.com"},{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"luarx","email":"renol_siete@hotmail.com"},{"name":"rmeissner","email":"richard@safe.global"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"631b5ea068205d359a53685e7a95c7798861043b","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.2.0.tgz","fileCount":67,"integrity":"sha512-shcyJZGfq0e8KOFiT3SsPCjwu/xfBOHqUEo3W/eZE1+fPBj+yhQS97cbAKlDg4pBJ9e/tYX1ndYxf5Ne3MgoCw==","signatures":[{"sig":"MEQCIClXrJVw3l2/Vr5MaIghXDgQttHdz4mBKGtiJzKEMGK1AiAaEXf3pRyOeM8kS/VJ/+hs77SNKWy43xVcryiaFsZGWA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":256285,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhPEaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp3TQ/+NwEsBGvP+4UnroZYSvZLPQoIQDUYAYL6IvDuza6IcrDw6Uzw\r\nFrQM6K6RVFPuABRn6T2VY1z42juzK/Dr0+z6Mgd5wA3qFREx0JZR67amtzwv\r\n/dLWYOQTa+OoUAaMImANcCgVnM3sj4NezUkavHAgnDNGWpPNYAZImP60t74U\r\nk7S7WFDXWnFIfidHRiC61CkL4Z4v+hhYO2ak9exQySJeIxCn2LfD3fbsPqyX\r\nyCC7YP13Yb+DBZe8T0Nc0kc1nOpkoeuAnqNDtUdengY5PqIDXzrWvNTBfoBK\r\n0GAHZgrQvVpqSlNggTpWSZf/TGn6QTbvAJ1uDQZ4M50tF8GNJXmhCeFZeuRG\r\nEPAEyOb2ggpG8117c2tttm5N7fut9TfbY9nCevlV74ZrvxWv3suL/NQ70wU8\r\nBY8Q6rn5leKXR8sjAdE/UdUf4Sramh4oQc5ZHZYkawiu4TABGLxrbDs1jfuT\r\nQFYUSYBpd0o33Qj+0v1jg7qWC9gNHVl6taOGG3RZvX0AsUh8r5RYovCPsOYJ\r\nn/l1OtmOHVheo5oPxu4yZOqErpHv+ErmuQ04dkPfqXzMyKrZ+czm3p+lUsFK\r\nrjMZi8OHsRBVovzRyjwUXAcKa+Xe0jCOlKlHwXzAQcSRGqARygtjGi8brEdf\r\n/LgqzQFCrYdxJnxpwTWNrHJKM5hxAQqykp0=\r\n=RufS\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"de8d2b9e4c279142f3b878f938877f846886bea3","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"8.0.0","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"16.11.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@gnosis.pm/safe-deployments":"1.17.0","@safe-global/safe-core-sdk-types":"^1.7.0"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.2","mocha":"^10.1.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.28.0","ethers":"^5.7.2","hardhat":"^2.12.2","ts-node":"^10.9.1","prettier":"^2.7.1","coveralls":"^3.1.1","typescript":"^4.9.3","@types/chai":"^4.3.4","@types/node":"^18.11.9","lint-staged":"^13.0.3","@types/mocha":"^10.0.0","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.20","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.1","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.44.0","@safe-global/safe-web3-lib":"^1.7.1","@safe-global/safe-ethers-lib":"^1.7.0","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.44.0"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.2.0_1669656857734_0.34394281405071014","host":"s3://npm-registry-packages"}},"3.2.1":{"name":"@safe-global/safe-core-sdk","version":"3.2.1","keywords":["Ethereum","Gnosis","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.2.1","maintainers":[{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"mikheevm","email":"mmvsha73@gmail.com"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"dab0cfd6f88ea81e9884f8c1ea87435b43fab30e","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.2.1.tgz","fileCount":67,"integrity":"sha512-IfA4AWbc7jjOa7GneI5qu8Nrb5wf1EYzmjlXQx3459274iyZ1tv0PAE66fMpYRtioPJt4V0VVEcfK8R2bxpOGA==","signatures":[{"sig":"MEQCIDaWGl4hOKXIx7H50T4WOqBofGC2IagQsn8fKavh7CTQAiBc/47cet0uEuG8Q1Dmnnx/X4lYamlLOuWDtesvjyPSVg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":260399,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjmb+WACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpmgBAAlwvEukDAhI6qZe0ScSenujccw3G4EF8/qK/extgr4rV1dpeB\r\n2urT3u8ejP4XGcQkTlOrnb6zIUDImuqAuyIdzbMe1ICxcNjwXn8Fi3VIZr5/\r\nsKJSKEDNGcyLCuRHucpqnlB5/GVkZCRdv9h15WFYnzoLbf2sPHQO7DCacMvf\r\nhmHTJ8NpJkWwmE5qk0f0+N9hIQK0sBlhFjJMgjOyE5KQVIR7fDmNJ2CtlAF8\r\ncGNmtD/W1NDVEXThJzHOgrwRAHRekMv/rEkiFr42p0VEPc6KqFbXwaWy5tWD\r\nfp3d5i5NVq9+Z+u+1HjAH5+ssJeOExAhafhJyphC+jgdsOVMBDnmtbINtr+o\r\niYZlB38JrBWqB91O/LfEL+liRd5lKjYvmCBMaQwgxuYmLLAOJ0+qYjxytHE0\r\nbexFTu7Cc6lKjJh5s39b6fqiCbta+/V33i7JewjM6HSJPLu2CU9bI2fWW1PP\r\nOewg1ksC0r+Tlg8OLiNJL0Ee/5BbIXL43Jk+B75yNwAm2kxFGwyxJB4D43ca\r\n6VQZvoXLQIqM5yOYSxDgDBx/ic6eCPxGYarmnYpa+mOScJcPVbdgLNPGqeFk\r\nkAb2fVgk+7p8SEmJv3BmR1GF4TR9yTsDxwQCHi1e2RN4eXtf5uMa9a/Exo99\r\nvUUAMdemdVGPze6/gs4Dr3Wa1YLmofd9hHY=\r\n=rNnw\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"7b27bbdd01bbed8b915dabd1d1a0eef732109222","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"germartinez","email":"germaga92@gmail.com"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"8.0.0","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"16.11.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@gnosis.pm/safe-deployments":"1.17.0","@safe-global/safe-core-sdk-types":"^1.7.0"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.2","mocha":"^10.1.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.28.0","ethers":"5.7.2","hardhat":"^2.12.2","prettier":"^2.8.0","coveralls":"^3.1.1","typescript":"^4.9.3","@types/chai":"^4.3.4","@types/node":"^18.11.9","lint-staged":"^13.0.4","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.20","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.1","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.45.0","@safe-global/safe-web3-lib":"^1.7.1","@safe-global/safe-ethers-lib":"^1.7.0","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.45.0"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.2.1_1671020438178_0.8930916728508946","host":"s3://npm-registry-packages"}},"3.2.2":{"name":"@safe-global/safe-core-sdk","version":"3.2.2","keywords":["Ethereum","Gnosis","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.2.2","maintainers":[{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"mikheevm","email":"mmvsha73@gmail.com"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"76603aa5300e00a9b05a1db6a26fda51b113854c","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.2.2.tgz","fileCount":67,"integrity":"sha512-l+OgYB6cHXBRUW5KECY/0d1QR3DIvRjNLOxOoCF/UWayy1Fb/TL/XNmsbdRYkgODWYL0b6Yrn5CY6hEYtholRQ==","signatures":[{"sig":"MEYCIQCwhLwNWe2BGdTTUeo7AhC/C1W5WmgawMah14ksCo8QTQIhAOP7IqidvKQ+TEm7jcq2czawk7QtHtrD7tJgECp0uDcW","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":260399,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjoYl+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrqrA/+KXEQU6EEk2+DrVN1DTk/IWEUaxY9CYwyB7uEBCjPyRsV+hSu\r\nEJLg5NZqXvT1iQQXMwUkINjhLLplqfqdSReP0XGBSW+hjhmwZq5kDhXQZTX2\r\nU+TUdgIf29Bu5Qg6N/lj3yHtJkyE9FTjL6TOUqH5em0hv+vQ8dsYJaYGSYHV\r\nDV+W3NUoK7UVw4evcOJDdQxXx+G3iVL9NZXtAA7U74DUWh/MbnYJ4QcDsizl\r\n30XssY9XAX6oCSfBy2xNhYfRphtUDH0zWUZKqmXycA1gYvIZKNwTpXd1bTJV\r\nw13BAI8pd3OIuFg2kJTVSbw+S1g2aeb3f07LLy7anscovn3hUqK4/enTbRam\r\nfPAMSiDiedZ82lQNYCTP8X76B2/u+dQipA4YqVFBSvPJgeh03BZyBxm3x2XV\r\nnvGVGVviQ9odn9iU9CzaH9KkzPKfR5iw7HAft3YS85Wr8dzsl7muL7R6zkJD\r\nWoATiz5xZq6cjSUePHTT2wsJw6Weg26W3gtR1rzrtyJinUx984gKyMIi5q2H\r\n4G65ygkduX4xs8aWW4u87INxrJaKRUCeyhBoLmHEx7agw88sqgtuQ+sbCCPX\r\nmkC67C5YAp6fFnRXFiOXGwZO2nYU9kDZIE7d8xjceog/UJqaCNmRJL2YYD+V\r\nDhPoD1tUYtSOeMRLzY89YhVPlJPCQ4LnJ9s=\r\n=JZPR\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"024d07ce3eafa2b67a8414a7afc9b4f6ba6db119","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"germartinez","email":"germaga92@gmail.com"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"8.0.0","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"16.11.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@gnosis.pm/safe-deployments":"1.17.0","@safe-global/safe-core-sdk-types":"^1.8.0"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.2","mocha":"^10.1.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.28.0","ethers":"5.7.2","hardhat":"^2.12.2","prettier":"^2.8.0","coveralls":"^3.1.1","typescript":"^4.9.3","@types/chai":"^4.3.4","@types/node":"^18.11.9","lint-staged":"^13.0.4","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.20","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.1","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.45.0","@safe-global/safe-web3-lib":"^1.8.0","@safe-global/safe-ethers-lib":"^1.8.0","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.45.0"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.2.2_1671530878637_0.024991756664789255","host":"s3://npm-registry-packages"}},"3.3.0":{"name":"@safe-global/safe-core-sdk","version":"3.3.0","keywords":["Ethereum","Gnosis","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.3.0","maintainers":[{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"mikheevm","email":"mmvsha73@gmail.com"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"0dddc3275ef42f6384757d44bf06ea5d751e13a0","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.3.0.tgz","fileCount":67,"integrity":"sha512-F7jo5c8xVJvF5Fmag8pNFJx5avXhq9t4RLXsDF4ZsdBQOXrAbIj0UZiDy47Gap2CT/RAchWyu4iAKUyrLYzMxA==","signatures":[{"sig":"MEUCIHNUrhzMH4U1FwcqcimkVYmb+AIUl+EgQ5uKF/+Z6rs/AiEA6XYZX54pRel2mxPtsZT5uOFKspkMcS7yCps8byjPMOc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":262760,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjzksSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpbwQ//Yuwpi0EEokiJEJBS5PA5JRWTAjh8JrTmzZaHBJrvHzr8ih0G\r\nEcYq7CfnzGQubP8NGn2IL5Vvp3kydgR8ehY6JmFERP9JWPoncCi2gISfHRD4\r\ntJDrGpZqFXMkmc1NsnMHvCI7E+V10UxWVRwk/rTUY1mYNo8ObVmjL7bYSkfl\r\nFQyzw9Y1cqhyAWMdwNVOmfKIwlGRDZpOW3+lb91OPNa3eg6hbseMKz2oSEWc\r\n+g0s0vU7VDru3FWSUhAVyaY3u37VrwVvxilCYHm9OCYDaUr/igMrjbCp7sYY\r\nHG+p6WWktD/hx3oKEP0dmTBjYiXZhWbXTOtEN6Qg97/nhjj21H6zWbRozqmA\r\n9zLmAsCvw4IpyelfHIGoiqkBUs8YMpdgFCbuaZyRTIioVNmMps+klxFmHhfQ\r\nQUtCrqMHPMNwkmvLfpeLPHXA1xv4cOp/MId+BzGbry9uU0EyWXIPeRDOaYii\r\nNMUFgVR3qPRxy5MtTwZewnZFQccpM5OBGP24J37vC/NPKlgomm/nZg3+B21Q\r\nCoe5wa1H6tjoFBwq8bOhrCqtFb0ZpFInrOjMMWC9U3dDSavVwC1raOepvSj4\r\nnckre3CWKK/f2jW/1jPPsXzbk+fZxefkNzxEDRpaP7HSTLyKydggYSIhnJLl\r\nUz6+XfTykXzeUYVY+9jx7ODP7rkVJq75xto=\r\n=CG4c\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"40061dedc748525612cf30f2839ea194c8c3a1d2","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"germartinez","email":"germaga92@gmail.com"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"9.2.0","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"16.13.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@gnosis.pm/safe-deployments":"1.19.0","@safe-global/safe-core-sdk-types":"^1.9.0"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.3","mocha":"^10.2.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.32.0","ethers":"5.7.2","hardhat":"^2.12.6","prettier":"^2.8.3","coveralls":"^3.1.1","typescript":"^4.9.4","@types/chai":"^4.3.4","@types/node":"^18.11.18","lint-staged":"^13.1.0","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.22","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.2","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.48.2","@safe-global/safe-web3-lib":"^1.9.0","@safe-global/safe-ethers-lib":"^1.9.0","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.48.2"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.3.0_1674464018269_0.22433363645833082","host":"s3://npm-registry-packages"}},"3.3.1":{"name":"@safe-global/safe-core-sdk","version":"3.3.1","keywords":["Ethereum","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.3.1","maintainers":[{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"mikheevm","email":"mmvsha73@gmail.com"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"3cfcb143cab9ac6d42388046aefdcfea7434503b","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.3.1.tgz","fileCount":64,"integrity":"sha512-smuVdFQIAifC79K2maCY4w1pCYWvXIbrPftKQSC+hxhWmDjJYsRfhbBT2lSg2lYbiXeosFGEPMVbiVjtnjQg5w==","signatures":[{"sig":"MEUCIH+kMDMU0lut63AtZgZdQ9bjE3ui2eXyFj/A/ozLzWkxAiEA+TuAFSUtZ/hRXyd+E1NRCAPHdBQLTZmdAAIAPzrA/Is=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":260436,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0nhQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpDkw//bl2UTsJlmuc+hVEboH+v4ln8RsuiYCV+R9HhPzHebm6BIQ+H\r\nFA5HbhntXuCI9t+Tmx+H3slLOPXGeie6nvL/4j6NMtw8WIl71Dx+34nVTOwU\r\nvL1iM/mTMfd5OlI3Q3oVN/WgCbLSm3OteY1tw+H70haBDiAVvpgtpnUL+94w\r\n3sKmFijmvJBgYoeTpncReIhoAeY3OpMJwSZHPR6DDJNK+WNaZSQJpr0N53fA\r\ntaNlfDEO1zUtiI+spQyehsBBXrixX86BTaOCvF6T41d+o6LQIahuvJY9Jmgv\r\nXee3LfQ3frGlBD7oULtHHbG67nj3pkjyjiLFbkqFPhF5Hjr3DxqTdk/oGmL8\r\nNPiEyq8kyH4J3FDEIKzLpsaCrLr4y0N2cNIAhXCmJJDvW1r8CtCDCrCba1Mm\r\ncic7CpP1CdbuRcT+DUNfiqpUz036wQeDQ3GJ8Ki5469splj6qKPZ1DDQ8r8o\r\np2QneFsgL+NulEWuL05ZZhiN/uG0PEyUO8fFvvhRP6tnw8l28WeUpw+fn5Lf\r\nP3Htbt5eXFChnVz/gV0NWhTERsAAS0WMJoQvHzK3hMiu4CnnivNZfh1m074c\r\n4uA/RkkVbOVp28kMOao4Vrgex+iDZgyOCfRCnf4zkPzphIHOvWVqBRjjBFwb\r\nf61mp9P9OllTN8KMsJXlWtb58kdn5pwYLI8=\r\n=He0e\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"53a21d693467a3c1e47fe30fa4db28b4374af1b5","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"germartinez","email":"germaga92@gmail.com"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"9.2.0","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"16.13.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@gnosis.pm/safe-deployments":"1.19.0","@safe-global/safe-core-sdk-types":"^1.9.0","@safe-global/safe-core-sdk-utils":"^1.7.1"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.3","mocha":"^10.2.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.32.0","ethers":"5.7.2","hardhat":"^2.12.6","prettier":"^2.8.3","coveralls":"^3.1.1","typescript":"^4.9.4","@types/chai":"^4.3.4","@types/node":"^18.11.18","lint-staged":"^13.1.0","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.22","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.2","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.48.2","@safe-global/safe-web3-lib":"^1.9.0","@safe-global/safe-ethers-lib":"^1.9.0","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.48.2"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.3.1_1674737744746_0.5230254056348362","host":"s3://npm-registry-packages"}},"3.3.2":{"name":"@safe-global/safe-core-sdk","version":"3.3.2","keywords":["Ethereum","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.3.2","maintainers":[{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"mikheevm","email":"mmvsha73@gmail.com"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"571e38eec152668bf2c04771f62f1b123161ec7c","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.3.2.tgz","fileCount":64,"integrity":"sha512-IhAxGyYnnG+Zl2zWe1520l00l+FT1QTeMDQlTtnhKCeISs2krXZSEKuolj/sHltXzrswuntaGElAYJyruWEG/A==","signatures":[{"sig":"MEYCIQC6nW2ttEgz23oK7yz48p2kp3OfvFKksM6o/Bca1x+SlwIhALphMLu6iqnVSfp2ZwKpc4tLYdgz/vJD6Wx56Yk/bS1l","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":260455,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj95OBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoPJg/9FFXB6fJCyusHTpwMTucmMn26IrnKu9PVOj+00RGqosoIV0Pk\r\nEDhO+t2WI8QwVQdX2wic0m+BYbOjfMqEwyBPAU1WSHhP1v52hVQOJlJ1urRW\r\n6qJR5ocqd/JTrkUNOaOmEmyTByr+7YaL5U/VeZUZsuc6O2MUoGrQMGfmrlYi\r\nbRbyeAP5j5KYiWVH0GW2EgMV9Om6yh4Ng3nLLlHS8VPCpyyFUgEBsL5NQHLN\r\n9By5Kn1/jog2g+qWOgYbL/DPdY4Vhx/OsaIwnub2hRh1e1ebdJO9bP0SEjlf\r\nnpvGKXl0pscJTV2cuEZRR4tO2xM9ZgVQL8QEYxRLgyq2gadPqlM9wWQHtQVc\r\nOpSe961uq2Y0O7hHp94P2zkFOT/LMWaGW+Ufx5U53w3anAQ2JGaRK0zAnYbi\r\nvWU33xatl75hBhbdNkUHPRnmvTq//kjormqyqIKUcQSs6M39JXeFkD4DRJiS\r\nWYRZ+tS2OSvfKUMCiKizuYbscZ7o/2MGp2xcsSGhUtspdY+f+niNRhV+0KzA\r\nFPoFLIywLMCJuP4EKqz5bP0WWay+rWOaRHFLOcYLkOWrL/BBcjLdCrHW9S5i\r\nsZZ5kbrA56HdQfMP0ghNdvWrsO3iAfmiS3PQ6YqIiFYoeRNDCfD5DnnCPY0r\r\nvMidMAS3zBEDT1fwLu/ohqbSnvSlQySjsa8=\r\n=MCrv\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"95ba5c13b576571cb3aeba63301f655fabb4c5c7","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"germartinez","email":"germaga92@gmail.com"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"9.2.0","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"16.13.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@safe-global/safe-deployments":"^1.20.2","@safe-global/safe-core-sdk-types":"^1.9.0","@safe-global/safe-core-sdk-utils":"^1.7.2"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.3","mocha":"^10.2.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.32.0","ethers":"5.7.2","hardhat":"^2.12.6","prettier":"^2.8.3","coveralls":"^3.1.1","typescript":"^4.9.4","@types/chai":"^4.3.4","@types/node":"^18.11.18","lint-staged":"^13.1.0","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.22","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.2","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.48.2","@safe-global/safe-web3-lib":"^1.9.2","@safe-global/safe-ethers-lib":"^1.9.2","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.48.2"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.3.2_1677169537159_0.7561248976889661","host":"s3://npm-registry-packages"}},"3.3.3":{"name":"@safe-global/safe-core-sdk","version":"3.3.3","keywords":["Ethereum","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.3.3","maintainers":[{"name":"dasanra","email":"daniel@safe.global"},{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"mikheevm","email":"mmvsha73@gmail.com"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"5074ebdc954655e53e1a96b7e6013b18ddc54e8f","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.3.3.tgz","fileCount":64,"integrity":"sha512-f7k/L8eGINrjAgN5DQuHY101gxntVTwS/VO14w1Qh+2+AuZmyWn0WekAAU0icAc1jVy0lhgNqCvbMQHc7rkfUg==","signatures":[{"sig":"MEUCIFXtnUT0ydraOZ4kaRBxha6AxSEu6SmAGVlL8JuStGegAiEA1ZWNVNTzvejugdw5y+L7My8l3m76v+dzeITd6u2ayCc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":260864,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkSOxWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr3NQ/9FQ3NItkDiN19Zukd4sxs8TFWyk2bOcGAPFpKHwLe+MZNgHfR\r\n9+kWTTYemDDDdhrDuyfW/H5aXA9L8uYAuDxaoVrTrNwhDF0iL4Fda7Q7O9Nb\r\nvBvRMFNFKlT4boNbOC6QBlXPKKRj0f+L5uGYIFj7rEGCARhFYlq6UXT0jz00\r\ndtdcD3HM0ykq8hyqzg51Xd8NNn82pCy/ORSoyHWSw89E6hYqK2bo3TaExezR\r\nuKSxbPKtCjvCmZxsCwBv8MhtoNBKJc8wDZbg4dr/pO2lc+EzM0y/F1crJPm2\r\nVbgO/CVCeM6Dwvu+48FkkTgVcZaID06h9BjSSBPQbCdoaNeSpz2GlihlF3EY\r\nmvbzfyIU8szVD9vKIwikiJGTYmOz2C9S4a1JoQYeOjNLxvKFSvMDTPnQOAvF\r\n6HfBYfRrllFU7qCiuVlABFabe0dJchYAO7cZa6ZFzEEicaxLKcn7ALKEhlo4\r\nAvGjGFbxDJCDRNZU/IBXaJ+0ENCmWPGOdZ2HSW23DGnNyQSDTNs3DqFMGNZO\r\nuzmFZFVYiU/XTy2Wq4D4a5hLFAq9yma3U5I4casHAPxDBdURDox6bj5FMyul\r\nB307RptFHVz0CM1ca/IVePZwqR669cYiBPOstiMvGz/V4O9dcchABroHnpgo\r\n8ZrR6U/xm+goRIECeiE2Ej3GEZQH3qv0QPc=\r\n=XdI9\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"9d63cb5f223a47e3fdc48389968431eb57474cb9","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"germartinez","email":"germaga92@gmail.com"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"8.19.4","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"16.20.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@safe-global/safe-deployments":"^1.22.0","@safe-global/safe-core-sdk-types":"^1.9.1","@safe-global/safe-core-sdk-utils":"^1.7.3"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.3","mocha":"^10.2.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.32.0","ethers":"5.7.2","hardhat":"^2.12.6","prettier":"^2.8.3","coveralls":"^3.1.1","typescript":"^4.9.4","@types/chai":"^4.3.4","@types/node":"^18.11.18","lint-staged":"^13.1.0","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.22","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.2","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.48.2","@safe-global/safe-web3-lib":"^1.9.3","@safe-global/safe-ethers-lib":"^1.9.3","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.48.2"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.3.3_1682500694578_0.9837131790970164","host":"s3://npm-registry-packages"}},"3.3.4":{"name":"@safe-global/safe-core-sdk","version":"3.3.4","keywords":["Ethereum","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.3.4","maintainers":[{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"dasanra","email":"daniel@safe.global"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"d404287f9b910feab3e692243aaf62494ff2d2a9","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.3.4.tgz","fileCount":64,"integrity":"sha512-tgcK7VWo66Z8632xaYDzUHQ8InPOaI10ELk1wCrO/C3QjPwxjIozbMGOMzF4RZPCSJX2YAHowAvOgmEukgSkxA==","signatures":[{"sig":"MEUCIQCaKFYcPtFcRwlGBkN/POKFh+gxinM5jMnzleVcH0FGeAIgVPHtYwnHsECTJc2d5PeOp78vGxiHvOkS3uRvGhIRPtk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":262116},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"b7632a8a25cc2f8ffa2636f1e68ddccab4a7f79a","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"germartinez","email":"germaga92@gmail.com"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"9.5.1","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"18.16.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@safe-global/safe-deployments":"^1.25.0","@safe-global/safe-core-sdk-types":"^1.9.2","@safe-global/safe-core-sdk-utils":"^1.7.4"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.3","mocha":"^10.2.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.32.0","ethers":"5.7.2","hardhat":"^2.12.6","prettier":"^2.8.3","coveralls":"^3.1.1","typescript":"^4.9.4","@types/chai":"^4.3.4","@types/node":"^18.11.18","lint-staged":"^13.1.0","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.22","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.2","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.48.2","@safe-global/safe-web3-lib":"^1.9.3","@safe-global/safe-ethers-lib":"^1.9.3","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.48.2"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.3.4_1688382645927_0.13139646374568992","host":"s3://npm-registry-packages"}},"3.3.5":{"name":"@safe-global/safe-core-sdk","version":"3.3.5","keywords":["Ethereum","Safe","SDK"],"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","_id":"@safe-global/safe-core-sdk@3.3.5","maintainers":[{"name":"germartinez","email":"germaga92@gmail.com"},{"name":"dasanra","email":"daniel@safe.global"}],"homepage":"https://github.com/safe-global/safe-core-sdk#readme","bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"dist":{"shasum":"30884639d368a9f50aa5fc96f78de87261ebdab3","tarball":"https://registry.npmjs.org/@safe-global/safe-core-sdk/-/safe-core-sdk-3.3.5.tgz","fileCount":64,"integrity":"sha512-ul+WmpxZOXgDIXrZ6MIHptThYbm0CVV3/rypMQEn4tZLkudh/yXK7EuWBFnx9prR3MePuku51Zcz9fu1vi7sfQ==","signatures":[{"sig":"MEUCIQCb9DujYpV0efCsf7HcGTQneLbWxbbyNdVIoxxpSTi/BAIgbfvXV+wQxXA2tFxVS/SBGMf+SNHY+yrGvofo/r82Zu0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":276749},"main":"dist/src/index.js","husky":{"hooks":{"pre-commit":"lint-staged"}},"gitHead":"dd3d06adaf3d0275bf015ba0091dfcdf664b15cb","scripts":{"lint":"tslint -p tsconfig.json","build":"hardhat compile && tsc","format":"prettier --write \"{src,tests,hardhat,scripts}/**/*.ts\"","unbuild":"rimraf dist artifacts deployments cache .nyc_output","coverage":"nyc report --reporter=text-lcov | coveralls","test:ganache:web3:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:web3:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:web3:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:web3:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=web3 && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test","test:ganache:ethers:v1.0.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.1.1":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.2.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:ganache:ethers:v1.3.0":"export TEST_NETWORK=ganache && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat --network localhost deploy && nyc hardhat --network localhost test","test:hardhat:ethers:v1.0.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.0.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.1.1":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.1.1 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.2.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.2.0 && hardhat deploy && nyc hardhat test","test:hardhat:ethers:v1.3.0":"export TEST_NETWORK=hardhat && export ETH_LIB=ethers && export SAFE_VERSION=1.3.0 && hardhat deploy && nyc hardhat test"},"typings":"dist/src/index.d.ts","_npmUser":{"name":"dasanra","email":"daniel@safe.global"},"deprecated":"WARNING: This project has been renamed to @safe-global/protocol-kit. Please, follow the migration guide https://docs.safe.global/safe-core-aa-sdk/protocol-kit/reference/v1","repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"_npmVersion":"9.6.7","description":"Safe Core SDK","directories":{},"lint-staged":{"src/**/!(*test).ts":["yarn lint","prettier --write"]},"_nodeVersion":"18.17.0","dependencies":{"semver":"^7.3.8","web3-utils":"^1.8.1","zksync-web3":"^0.14.3","ethereumjs-util":"^7.1.5","@ethersproject/solidity":"^5.7.0","@safe-global/safe-deployments":"^1.25.0","@safe-global/safe-core-sdk-types":"^1.9.2","@safe-global/safe-core-sdk-utils":"^1.7.4"},"_hasShrinkwrap":false,"devDependencies":{"nyc":"^15.1.0","chai":"^4.3.7","web3":"^1.8.1","husky":"^8.0.3","mocha":"^10.2.0","yargs":"^17.6.2","dotenv":"^16.0.3","eslint":"^8.32.0","ethers":"5.7.2","hardhat":"^2.12.6","prettier":"^2.8.3","coveralls":"^3.1.1","typescript":"^4.9.4","@types/chai":"^4.3.4","@types/node":"^18.11.18","lint-staged":"^13.1.0","@types/mocha":"^10.0.1","@types/yargs":"^16.0.1","ts-generator":"^0.1.1","@types/semver":"^7.3.13","hardhat-deploy":"^0.11.22","ethereum-waffle":"^3.4.4","chai-as-promised":"^7.1.1","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@nomiclabs/hardhat-web3":"^2.0.0","@types/chai-as-promised":"^7.1.5","@nomiclabs/hardhat-ethers":"^2.2.2","@nomiclabs/hardhat-waffle":"^2.0.3","@typescript-eslint/parser":"^5.48.2","@safe-global/safe-web3-lib":"^1.9.4","@safe-global/safe-ethers-lib":"^1.9.4","@gnosis.pm/safe-contracts-v1.2.0":"npm:@gnosis.pm/safe-contracts@1.2.0","@gnosis.pm/safe-contracts-v1.3.0":"npm:@gnosis.pm/safe-contracts@1.3.0","@typescript-eslint/eslint-plugin":"^5.48.2"},"_npmOperationalInternal":{"tmp":"tmp/safe-core-sdk_3.3.5_1692283798365_0.11957647243021796","host":"s3://npm-registry-packages"}}},"time":{"created":"2022-11-28T17:34:17.598Z","modified":"2025-06-16T14:31:24.221Z","3.2.0":"2022-11-28T17:34:17.966Z","3.2.1":"2022-12-14T12:20:38.336Z","3.2.2":"2022-12-20T10:07:58.844Z","3.3.0":"2023-01-23T08:53:38.458Z","3.3.1":"2023-01-26T12:55:44.887Z","3.3.2":"2023-02-23T16:25:37.343Z","3.3.3":"2023-04-26T09:18:14.822Z","3.3.4":"2023-07-03T11:10:46.143Z","3.3.5":"2023-08-17T14:49:58.572Z"},"bugs":{"url":"https://github.com/safe-global/safe-core-sdk/issues"},"author":{"url":"https://safe.global","name":"Safe"},"license":"MIT","homepage":"https://github.com/safe-global/safe-core-sdk#readme","keywords":["Ethereum","Safe","SDK"],"repository":{"url":"git+https://github.com/safe-global/safe-core-sdk.git","type":"git"},"description":"Safe Core SDK","maintainers":[{"email":"daniel@safe.global","name":"dasanra"},{"email":"yago@safe.global","name":"yagopv"}],"readme":"# Safe Core SDK\n\n[![NPM Version](https://badge.fury.io/js/%40safe-global%2Fsafe-core-sdk.svg)](https://badge.fury.io/js/%40safe-global%2Fsafe-core-sdk)\n[![GitHub Release](https://img.shields.io/github/release/safe-global/safe-core-sdk.svg?style=flat)](https://github.com/safe-global/safe-core-sdk/releases)\n[![GitHub](https://img.shields.io/github/license/safe-global/safe-core-sdk)](https://github.com/safe-global/safe-core-sdk/blob/main/LICENSE.md)\n\nSoftware development kit that facilitates the interaction with the [Safe contracts](https://github.com/safe-global/safe-contracts).\n\n## Table of contents\n* [Installation](#installation)\n* [Build](#build)\n* [Getting Started](#getting-started)\n* [Safe Factory API Reference](#factory-api)\n* [Safe Core SDK API Reference](#sdk-api)\n* [License](#license)\n* [Contributors](#contributors)\n\n## <a name=\"installation\">Installation</a>\n\nInstall the package with yarn or npm:\n\n```bash\nyarn install\nnpm install\n```\n\n## <a name=\"build\">Build</a>\n\nBuild the package with yarn or npm:\n\n```bash\nyarn build\nnpm build\n```\n\n## <a name=\"getting-started\">Getting Started</a>\n\nThe following steps show how to set up the Safe Core SDK, deploy a new Safe, create a Safe transaction, generate the required signatures from owners and execute the transaction. However, using the Safe Core SDK alone will not allow for the collection of owner signatures off-chain. To do this and be able to see and confirm the pending transactions shown in the [Safe Web App](https://app.safe.global/), it is recommended that you follow this other [guide](/guides/integrating-the-safe-core-sdk.md) that covers the use of the Safe Core SDK, combined with the Safe Service Client.\n\n### 1. Instantiate an EthAdapter\n\nFirst of all, we need to create an `EthAdapter`, which contains all the required utilities for the SDKs to interact with the blockchain. It acts as a wrapper for [web3.js](https://web3js.readthedocs.io/) or [ethers.js](https://docs.ethers.io/v5/) Ethereum libraries.\n\nDepending on the library used by the Dapp, there are two options:\n\n- [Create an `EthersAdapter` instance](https://github.com/safe-global/safe-core-sdk/tree/main/packages/safe-ethers-lib#initialization)\n- [Create a `Web3Adapter` instance](https://github.com/safe-global/safe-core-sdk/tree/main/packages/safe-web3-lib#initialization)\n\nOnce the instance of `EthersAdapter` or `Web3Adapter` is created, it can be used in the SDK initialization.\n\n### 2. Deploy a new Safe\n\nTo deploy a new Safe account instantiate the `SafeFactory` class and call the `deploySafe` method with the right params to configure the new Safe. This includes defining the list of owners and the threshold of the Safe. A Safe account with three owners and threshold equal three will be used as the starting point for this example but any Safe configuration is valid.\n\n```js\nimport Safe, { SafeFactory, SafeAccountConfig } from '@safe-global/safe-core-sdk'\n\nconst safeFactory = await SafeFactory.create({ ethAdapter })\n\nconst owners = ['0x<address>', '0x<address>', '0x<address>']\nconst threshold = 3\nconst safeAccountConfig: SafeAccountConfig = {\n  owners,\n  threshold,\n  // ...\n}\n\nconst safeSdk: Safe = await safeFactory.deploySafe({ safeAccountConfig })\n```\n\nThe `deploySafe` method executes a transaction from the `owner1` account, deploys a new Safe and returns an instance of the Safe Core SDK connected to the new Safe. Check the `deploySafe` method in the [API Reference](#factory-api) for more details on additional configuration parameters and callbacks.\n\nCall the `getAddress` method, for example, to check the address of the newly deployed Safe.\n\n```js\nconst newSafeAddress = safeSdk.getAddress()\n```\n\nTo instantiate the Safe Core SDK from an existing Safe just pass to it an instance of the `EthAdapter` class and the Safe address. \n\n```js\nimport Safe from '@safe-global/safe-core-sdk'\n\nconst safeSdk: Safe = await Safe.create({ ethAdapter: ethAdapterOwner1, safeAddress })\n```\n\nCheck the `create` method in the [API Reference](#sdk-api) for more details on additional configuration parameters.\n\n### 3. Create a Safe transaction\n\n```js\nimport { SafeTransactionDataPartial } from '@safe-global/safe-core-sdk-types'\n\nconst safeTransactionData: SafeTransactionDataPartial = {\n  to: '0x<address>',\n  value: '<eth_value_in_wei>',\n  data: '0x<data>'\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\n```\n\nCheck the `createTransaction` method in the [API Reference](#sdk-api) for additional details on creating MultiSend transactions.\n\nBefore executing this transaction, it must be signed by the owners and this can be done off-chain or on-chain. In this example `owner1` will sign it off-chain, `owner2` will sign it on-chain and `owner3` will execute it (the executor also signs the transaction transparently).\n\n### 3.a. Off-chain signatures\n\nThe `owner1` account signs the transaction off-chain.\n\n```js\nconst signedSafeTransaction = await safeSdk.signTransaction(safeTransaction)\n```\n\nBecause the signature is off-chain, there is no interaction with the contract and the signature becomes available at `signedSafeTransaction.signatures`.\n\n### 3.b. On-chain signatures\n\nTo connect `owner2` to the Safe we need to create a new instance of the class `EthAdapter` passing to its constructor the owner we would like to connect. After `owner2` account is connected to the SDK as a signer the transaction hash will be approved on-chain.\n\n```js\nconst ethAdapterOwner2 = new EthersAdapter({ ethers, signerOrProvider: owner2 })\nconst safeSdk2 = await safeSdk.connect({ ethAdapter: ethAdapterOwner2, safeAddress })\nconst txHash = await safeSdk2.getTransactionHash(safeTransaction)\nconst approveTxResponse = await safeSdk2.approveTransactionHash(txHash)\nawait approveTxResponse.transactionResponse?.wait()\n```\n\n### 4. Transaction execution\n\nLastly, `owner3` account is connected to the SDK as a signer and executor of the Safe transaction to execute it.\n\n```js\nconst ethAdapterOwner3 = new EthersAdapter({ ethers, signerOrProvider: owner3 })\nconst safeSdk3 = await safeSdk2.connect({ ethAdapter: ethAdapterOwner3, safeAddress })\nconst executeTxResponse = await safeSdk3.executeTransaction(safeTransaction)\nawait executeTxResponse.transactionResponse?.wait()\n```\n\nAll the signatures used to execute the transaction are now available at `safeTransaction.signatures`.\n\n## <a name=\"factory-api\">Safe Factory API Reference</a>\n\n### create\n\nReturns an instance of the Safe Factory.\n\n```js\nimport { SafeFactory } from '@safe-global/safe-core-sdk'\n\nconst safeFactory = await SafeFactory.create({ ethAdapter })\n```\n\n* The `isL1SafeMasterCopy` flag\n\n  There are two versions of the Safe contracts: [GnosisSafe.sol](https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/GnosisSafe.sol) that does not trigger events in order to save gas and [GnosisSafeL2.sol](https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/GnosisSafeL2.sol) that does, which is more appropriate for L2 networks.\n\n  By default `GnosisSafe.sol` will be only used on Ethereum Mainnet. For the rest of the networks where the Safe contracts are already deployed, the `GnosisSafeL2.sol` contract will be used unless you add the `isL1SafeMasterCopy` flag to force the use of the `GnosisSafe.sol` contract.\n\n  ```js\n  const safeFactory = await SafeFactory.create({ ethAdapter, isL1SafeMasterCopy: true })\n  ```\n\n* The `contractNetworks` property\n\n  If the Safe contracts are not deployed to your current network, the `contractNetworks` property will be required to point to the addresses of the Safe contracts previously deployed by you.\n\n  ```js\n  import { ContractNetworksConfig } from '@safe-global/safe-core-sdk'\n\n  const chainId = await ethAdapter.getChainId()\n  const contractNetworks: ContractNetworksConfig = {\n    [chainId]: {\n      safeMasterCopyAddress: '<MASTER_COPY_ADDRESS>',\n      safeProxyFactoryAddress: '<PROXY_FACTORY_ADDRESS>',\n      multiSendAddress: '<MULTI_SEND_ADDRESS>',\n      multiSendCallOnlyAddress: '<MULTI_SEND_CALL_ONLY_ADDRESS>',\n      fallbackHandlerAddress: '<FALLBACK_HANDLER_ADDRESS>',\n      signMessageLibAddress: '<SIGN_MESSAGE_LIB_ADDRESS>',\n      createCallAddress: '<CREATE_CALL_ADDRESS>',\n      safeMasterCopyAbi: '<MASTER_COPY_ABI>', // Optional. Only needed with web3.js\n      safeProxyFactoryAbi: '<PROXY_FACTORY_ABI>', // Optional. Only needed with web3.js\n      multiSendAbi: '<MULTI_SEND_ABI>', // Optional. Only needed with web3.js\n      multiSendCallOnlyAbi: '<MULTI_SEND_CALL_ONLY_ABI>', // Optional. Only needed with web3.js\n      fallbackHandlerAbi: '<FALLBACK_HANDLER_ABI>', // Optional. Only needed with web3.js \n      signMessageLibAbi: '<SIGN_MESSAGE_LIB_ABI>', // Optional. Only needed with web3.js\n      createCallAbi: '<CREATE_CALL_ABI>' // Optional. Only needed with web3.js\n    }\n  }\n\n  const safeFactory = await SafeFactory.create({ ethAdapter, contractNetworks })\n  ```\n\n* The `safeVersion` property\n\n  The `SafeFactory` constructor also accepts the `safeVersion` property to specify the Safe contract version that will be deployed. This string can take the values `1.0.0`, `1.1.1`, `1.2.0` or `1.3.0`. If not specified, the most recent contract version will be used by default.\n\n  ```js\n  const safeVersion = 'X.Y.Z'\n  const safeFactory = await SafeFactory.create({ ethAdapter, safeVersion })\n  ```\n\n### deploySafe\n\nDeploys a new Safe and returns an instance of the Safe Core SDK connected to the deployed Safe. The address of the Master Copy, Safe contract version and the contract (`GnosisSafe.sol` or `GnosisSafeL2.sol`) of the deployed Safe will depend on the initialization of the `safeFactory` instance.\n\n```js\nconst safeAccountConfig: SafeAccountConfig = {\n  owners,\n  threshold,\n  to, // Optional\n  data, // Optional\n  fallbackHandler, // Optional\n  paymentToken, // Optional\n  payment, // Optional\n  paymentReceiver // Optional\n}\n\nconst safeSdk = await safeFactory.deploySafe({ safeAccountConfig })\n```\n\nThis method can optionally receive the `safeDeploymentConfig` parameter to define the `saltNonce`.\n\n```js\nconst safeAccountConfig: SafeAccountConfig = {\n  owners,\n  threshold,\n  to, // Optional\n  data, // Optional\n  fallbackHandler, // Optional\n  paymentToken, // Optional\n  payment, // Optional\n  paymentReceiver // Optional\n}\nconst safeDeploymentConfig: SafeDeploymentConfig = { saltNonce }\n\nconst safeSdk = await safeFactory.deploySafe({ safeAccountConfig, safeDeploymentConfig })\n```\n\nOptionally, some properties can be passed as execution options:\n\n```js\nconst options: Web3TransactionOptions = {\n  from, // Optional\n  gas, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst options: EthersTransactionOptions = {\n  from, // Optional\n  gasLimit, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst safeSdk = await safeFactory.deploySafe({ safeAccountConfig, safeDeploymentConfig, options })\n```\n\nIt can also take an optional callback which receives the `txHash` of the Safe deployment transaction prior to returning a new instance of the Safe Core SDK:\n\n```js\nconst callback = (txHash: string): void => {\n  console.log({ txHash })\n}\n\nconst safeSdk = await safeFactory.deploySafe({ safeAccountConfig, callback })\n```\n\n## <a name=\"sdk-api\">Safe Core SDK API Reference</a>\n\n### create\n\nReturns an instance of the Safe Core SDK connected to the `safeAddress`.\n\n```js\nimport Safe from '@safe-global/safe-core-sdk'\n\nconst safeSdk = await Safe.create({ ethAdapter, safeAddress })\n```\n\n* The `isL1SafeMasterCopy` flag\n\n  There are two versions of the Safe contracts: [GnosisSafe.sol](https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/GnosisSafe.sol) that does not trigger events in order to save gas and [GnosisSafeL2.sol](https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/GnosisSafeL2.sol) that does, which is more appropriate for L2 networks.\n\n  By default `GnosisSafe.sol` will be only used on Ethereum Mainnet. For the rest of the networks where the Safe contracts are already deployed, the `GnosisSafeL2.sol` contract will be used unless you add the `isL1SafeMasterCopy` flag to force the use of the `GnosisSafe.sol` contract.\n\n  ```js\n  const safeSdk = await Safe.create({ ethAdapter, safeAddress, isL1SafeMasterCopy: true })\n  ```\n\n* The `contractNetworks` property\n\n  If the Safe contracts are not deployed to your current network, the `contractNetworks` property will be required to point to the addresses of the Safe contracts previously deployed by you.\n\n  ```js\n  import { ContractNetworksConfig } from '@safe-global/safe-core-sdk'\n\n  const chainId = await ethAdapter.getChainId()\n  const contractNetworks: ContractNetworksConfig = {\n    [chainId]: {\n      safeMasterCopyAddress: '<MASTER_COPY_ADDRESS>',\n      safeProxyFactoryAddress: '<PROXY_FACTORY_ADDRESS>',\n      multiSendAddress: '<MULTI_SEND_ADDRESS>',\n      multiSendCallOnlyAddress: '<MULTI_SEND_CALL_ONLY_ADDRESS>',\n      fallbackHandlerAddress: '<FALLBACK_HANDLER_ADDRESS>',\n      signMessageLibAddress: '<SIGN_MESSAGE_LIB_ADDRESS>',\n      createCallAddress: '<CREATE_CALL_ADDRESS>',\n      safeMasterCopyAbi: '<MASTER_COPY_ABI>', // Optional. Only needed with web3.js\n      safeProxyFactoryAbi: '<PROXY_FACTORY_ABI>', // Optional. Only needed with web3.js\n      multiSendAbi: '<MULTI_SEND_ABI>', // Optional. Only needed with web3.js\n      multiSendCallOnlyAbi: '<MULTI_SEND_CALL_ONLY_ABI>', // Optional. Only needed with web3.js\n      fallbackHandlerAbi: '<FALLBACK_HANDLER_ABI>', // Optional. Only needed with web3.js \n      signMessageLibAbi: '<SIGN_MESSAGE_LIB_ABI>', // Optional. Only needed with web3.js\n      createCallAbi: '<CREATE_CALL_ABI>' // Optional. Only needed with web3.js\n    }\n  }\n\n  const safeSdk = await Safe.create({ ethAdapter, safeAddress, contractNetworks })\n  ```\n\n### connect\n\nReturns a new instance of the Safe Core SDK connected to the `safeAddress`.\n\n```js\nconst safeSdk2 = await safeSdk.connect({ ethAdapter, safeAddress })\n```\n\n* The `isL1SafeMasterCopy` flag\n\n  There are two versions of the Safe contracts: [GnosisSafe.sol](https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/GnosisSafe.sol) that does not trigger events in order to save gas and [GnosisSafeL2.sol](https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/GnosisSafeL2.sol) that does, which is more appropriate for L2 networks.\n\n  By default `GnosisSafe.sol` will be only used on Ethereum Mainnet. For the rest of the networks where the Safe contracts are already deployed, the `GnosisSafeL2.sol` contract will be used unless you add the `isL1SafeMasterCopy` flag to force the use of the `GnosisSafe.sol` contract.\n\n  ```js\n  const safeSdk = await Safe.connect({ ethAdapter, safeAddress, isL1SafeMasterCopy: true })\n  ```\n\n* The `contractNetworks` property\n\n  If the Safe contracts are not deployed to your current network, the `contractNetworks` property will be required to point to the addresses of the Safe contracts previously deployed by you.\n\n  ```js\n  import { ContractNetworksConfig } from '@safe-global/safe-core-sdk'\n\n  const chainId = await ethAdapter.getChainId()\n  const contractNetworks: ContractNetworksConfig = {\n    [chainId]: {\n      safeMasterCopyAddress: '<MASTER_COPY_ADDRESS>',\n      safeProxyFactoryAddress: '<PROXY_FACTORY_ADDRESS>',\n      multiSendAddress: '<MULTI_SEND_ADDRESS>',\n      multiSendCallOnlyAddress: '<MULTI_SEND_CALL_ONLY_ADDRESS>',\n      fallbackHandlerAddress: '<FALLBACK_HANDLER_ADDRESS>',\n      signMessageLibAddress: '<SIGN_MESSAGE_LIB_ADDRESS>',\n      createCallAddress: '<CREATE_CALL_ADDRESS>',\n      safeMasterCopyAbi: '<MASTER_COPY_ABI>', // Optional. Only needed with web3.js\n      safeProxyFactoryAbi: '<PROXY_FACTORY_ABI>', // Optional. Only needed with web3.js\n      multiSendAbi: '<MULTI_SEND_ABI>', // Optional. Only needed with web3.js\n      multiSendCallOnlyAbi: '<MULTI_SEND_CALL_ONLY_ABI>', // Optional. Only needed with web3.js\n      fallbackHandlerAbi: '<FALLBACK_HANDLER_ABI>', // Optional. Only needed with web3.js \n      signMessageLibAbi: '<SIGN_MESSAGE_LIB_ABI>', // Optional. Only needed with web3.js\n      createCallAbi: '<CREATE_CALL_ABI>' // Optional. Only needed with web3.js\n    }\n  }\n  const safeSdk = await Safe.connect({ ethAdapter, safeAddress, contractNetworks })\n  ```\n\n### getAddress\n\nReturns the address of the current SafeProxy contract.\n\n```js\nconst safeAddress = safeSdk.getAddress()\n```\n\n### getContractVersion\n\nReturns the Safe Master Copy contract version.\n\n```js\nconst contractVersion = await safeSdk.getContractVersion()\n```\n\n### getOwners\n\nReturns the list of Safe owner accounts.\n\n```js\nconst ownerAddresses = await safeSdk.getOwners()\n```\n\n### getNonce\n\nReturns the Safe nonce.\n\n```js\nconst nonce = await safeSdk.getNonce()\n```\n\n### getThreshold\n\nReturns the Safe threshold.\n\n```js\nconst threshold = await safeSdk.getThreshold()\n```\n\n### getChainId\n\nReturns the chainId of the connected network.\n\n```js\nconst chainId = await safeSdk.getChainId()\n```\n\n### getBalance\n\nReturns the ETH balance of the Safe.\n\n```js\nconst balance = await safeSdk.getBalance()\n```\n\n### getGuard\n\nReturns the enabled Safe guard or 0x address if no guards are enabled.\n\n```js\nconst guardAddress = await safeSdk.getGuard()\n```\n\n### getModules\n\nReturns the list of addresses of all the enabled Safe modules.\n\n```js\nconst moduleAddresses = await safeSdk.getModules()\n```\n\n### isModuleEnabled\n\nChecks if a specific Safe module is enabled for the current Safe.\n\n```js\nconst isEnabled = await safeSdk.isModuleEnabled(moduleAddress)\n```\n\n### isOwner\n\nChecks if a specific address is an owner of the current Safe.\n\n```js\nconst isOwner = await safeSdk.isOwner(address)\n```\n\n### createTransaction\n\nReturns a Safe transaction ready to be signed by the owners and executed. The Safe Core SDK supports the creation of single Safe transactions but also MultiSend transactions.\n\n* **Single transactions**\n\n  This method can take an object of type `SafeTransactionDataPartial` that represents the transaction we want to execute (once the signatures are collected). It accepts some optional properties as follows.\n\n  ```js\n  import { SafeTransactionDataPartial } from '@safe-global/safe-core-sdk-types'\n\n  const safeTransactionData: SafeTransactionDataPartial = {\n    to,\n    data,\n    value,\n    operation, // Optional\n    safeTxGas, // Optional\n    baseGas, // Optional\n    gasPrice, // Optional\n    gasToken, // Optional\n    refundReceiver, // Optional\n    nonce // Optional\n  }\n  const safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\n  ```\n\n* **MultiSend transactions**\n\n  This method can take an array of `MetaTransactionData` objects that represent the multiple transactions we want to include in our MultiSend transaction. If we want to specify some of the optional properties in our MultiSend transaction, we can pass a second argument to the `createTransaction` method with the `SafeTransactionOptionalProps` object.\n\n  ```js\n  const safeTransactionData: MetaTransactionData[] = [\n    {\n      to,\n      data,\n      value,\n      operation // Optional\n    },\n    {\n      to,\n      data,\n      value,\n      operation // Optional\n    },\n    // ...\n  ]\n  const safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\n  ```\n\n  This method can also receive the `options` parameter to set the optional properties in the MultiSend transaction:\n\n  ```js\n  const safeTransactionData: MetaTransactionData[] = [\n    {\n      to,\n      data,\n      value,\n      operation // Optional\n    },\n    {\n      to,\n      data,\n      value,\n      operation // Optional\n    },\n    // ...\n  ]\n  const options: SafeTransactionOptionalProps = {\n    safeTxGas, // Optional\n    baseGas, // Optional\n    gasPrice, // Optional\n    gasToken, // Optional\n    refundReceiver, // Optional\n    nonce // Optional\n  }\n  const safeTransaction = await safeSdk.createTransaction({ safeTransactionData, options })\n  ```\n\n  In addition, the optional `callsOnly` parameter, which is `false` by default, allows to force the use of the `MultiSendCallOnly` instead of the `MultiSend` contract when sending a batch transaction:\n\n  ```js\n  const callsOnly = true\n  const safeTransaction = await safeSdk.createTransaction({ safeTransactionData, options, callsOnly })\n  ```\n\nIf the optional properties are not manually set, the Safe transaction returned will have the default value for each one:\n\n* `operation`: `OperationType.Call` (0) is the default value.\n* `safeTxGas`: The right gas estimation is the default value.\n* `baseGas`: 0 is the default value.\n* `gasPrice`: 0 is the default value.\n* `gasToken`: 0x address is the default value.\n* `refundReceiver`: 0x address is the default value.\n* `nonce`: The current Safe nonce is the default value.\n\nRead more about the [Safe transaction properties](https://docs.gnosis-safe.io/tutorials/tutorial_tx_service_initiate_sign).\n\n### createRejectionTransaction\n\nReturns a Safe transaction ready to be signed by the owners that invalidates the pending Safe transaction/s with a specific nonce.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst rejectionTransaction = await safeSdk.createRejectionTransaction(safeTransaction.data.nonce)\n```\n\n### copyTransaction\n\nCopies a Safe transaction.\n\n```js\nconst safeTransaction1 = await safeSdk.createTransaction({ safeTransactionData })\nconst safeTransaction2 = await copyTransaction(safeTransaction1)\n```\n\n### getTransactionHash\n\nReturns the transaction hash of a Safe transaction.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst txHash = await safeSdk.getTransactionHash(safeTransaction)\n```\n\n### signTransactionHash\n\nSigns a hash using the current owner account.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst txHash = await safeSdk.getTransactionHash(safeTransaction)\nconst signature = await safeSdk.signTransactionHash(txHash)\n```\n\n### signTypedData\n\nSigns a transaction according to the EIP-712 using the current signer account.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst signature = await safeSdk.signTypedData(safeTransaction)\n```\n\n### signTransaction\n\nReturns a new `SafeTransaction` object that includes the signature of the current owner. `eth_sign` will be used by default to generate the signature.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst signedSafeTransaction = await safeSdk.signTransaction(safeTransaction)\n```\n\nOptionally, an additional parameter can be passed to specify a different way of signing:\n\n```js\nconst signedSafeTransaction = await safeSdk.signTransaction(safeTransaction, 'eth_signTypedData')\n```\n\n```js\nconst signedSafeTransaction = await safeSdk.signTransaction(safeTransaction, 'eth_sign') // default option.\n```\n\n### approveTransactionHash\n\nApproves a hash on-chain using the current owner account.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst txHash = await safeSdk.getTransactionHash(safeTransaction)\nconst txResponse = await safeSdk.approveTransactionHash(txHash)\nawait txResponse.transactionResponse?.wait()\n```\n\nOptionally, some properties can be passed as execution options:\n\n```js\nconst options: Web3TransactionOptions = {\n  from, // Optional\n  gas, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst options: EthersTransactionOptions = {\n  from, // Optional\n  gasLimit, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst txResponse = await safeSdk.approveTransactionHash(txHash, options)\n```\n\n### getOwnersWhoApprovedTx\n\nReturns a list of owners who have approved a specific Safe transaction.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst txHash = await safeSdk.getTransactionHash(safeTransaction)\nconst ownerAddresses = await safeSdk.getOwnersWhoApprovedTx(txHash)\n```\n\n### createEnableFallbackHandlerTx\n\nReturns the Safe transaction to enable the fallback handler.\n\n```js\nconst safeTransaction = await safeSdk.createEnableFallbackHandlerTx(fallbackHandlerAddress)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = {\n  safeTxGas, // Optional\n  baseGas, // Optional\n  gasPrice, // Optional\n  gasToken, // Optional\n  refundReceiver, // Optional\n  nonce // Optional\n}\nconst safeTransaction = await safeSdk.createEnableFallbackHandlerTx(fallbackHandlerAddress, options)\n```\n\n### createDisableFallbackHandlerTx\n\nReturns the Safe transaction to disable the fallback handler.\n\n```js\nconst safeTransaction = await safeSdk.createDisableFallbackHandlerTx()\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createDisableFallbackHandlerTx(options)\n```\n\n### createEnableGuardTx\n\nReturns the Safe transaction to enable a Safe guard.\n\n```js\nconst safeTransaction = await safeSdk.createEnableGuardTx(guardAddress)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = {\n  safeTxGas, // Optional\n  baseGas, // Optional\n  gasPrice, // Optional\n  gasToken, // Optional\n  refundReceiver, // Optional\n  nonce // Optional\n}\nconst safeTransaction = await safeSdk.createEnableGuardTx(guardAddress, options)\n```\n\n### createDisableGuardTx\n\nReturns the Safe transaction to disable a Safe guard.\n\n```js\nconst safeTransaction = await safeSdk.createDisableGuardTx()\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createDisableGuardTx(options)\n```\n\n### createEnableModuleTx\n\nReturns a Safe transaction ready to be signed that will enable a Safe module.\n\n```js\nconst safeTransaction = await safeSdk.createEnableModuleTx(moduleAddress)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createEnableModuleTx(moduleAddress, options)\n```\n\n### createDisableModuleTx\n\nReturns a Safe transaction ready to be signed that will disable a Safe module.\n\n```js\nconst safeTransaction = await safeSdk.createDisableModuleTx(moduleAddress)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createDisableModuleTx(moduleAddress, options)\n```\n\n### createAddOwnerTx\n\nReturns the Safe transaction to add an owner and optionally change the threshold.\n\n```js\nconst params: AddOwnerTxParams = {\n  ownerAddress,\n  threshold // Optional. If `threshold` is not provided the current threshold will not change.\n}\nconst safeTransaction = await safeSdk.createAddOwnerTx(params)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createAddOwnerTx(params, options)\n```\n\n### createRemoveOwnerTx\n\nReturns the Safe transaction to remove an owner and optionally change the threshold.\n\n```js\nconst params: RemoveOwnerTxParams = {\n  ownerAddress,\n  newThreshold // Optional. If `newThreshold` is not provided, the current threshold will be decreased by one.\n}\nconst safeTransaction = await safeSdk.createRemoveOwnerTx(params)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createRemoveOwnerTx(params, options)\n```\n\n### createSwapOwnerTx\n\nReturns the Safe transaction to replace an owner of the Safe with a new one.\n\n```js\nconst params: SwapOwnerTxParams = {\n  oldOwnerAddress,\n  newOwnerAddress\n}\nconst safeTransaction = await safeSdk.createSwapOwnerTx(params)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createSwapOwnerTx(params, options)\n```\n\n### createChangeThresholdTx\n\nReturns the Safe transaction to change the threshold.\n\n```js\nconst safeTransaction = await safeSdk.createChangeThresholdTx(newThreshold)\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nThis method can optionally receive the `options` parameter:\n\n```js\nconst options: SafeTransactionOptionalProps = { ... }\nconst safeTransaction = await safeSdk.createChangeThresholdTx(newThreshold, options)\n```\n\n### isValidTransaction\n\nChecks if a Safe transaction can be executed successfully with no errors.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst isValidTx = await safeSdk.isValidTransaction(safeTransaction)\n```\n\nOptionally, some properties can be passed as execution options:\n\n```js\nconst options: Web3TransactionOptions = {\n  from, // Optional\n  gas, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst options: EthersTransactionOptions = {\n  from, // Optional\n  gasLimit, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst isValidTx = await safeSdk.isValidTransaction(safeTransaction, options)\n```\n\n### executeTransaction\n\nExecutes a Safe transaction.\n\n```js\nconst safeTransactionData: SafeTransactionDataPartial = {\n  // ...\n}\nconst safeTransaction = await safeSdk.createTransaction({ safeTransactionData })\nconst txResponse = await safeSdk.executeTransaction(safeTransaction)\nawait txResponse.transactionResponse?.wait()\n```\n\nOptionally, some properties can be passed as execution options:\n\n```js\nconst options: Web3TransactionOptions = {\n  from, // Optional\n  gas, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst options: EthersTransactionOptions = {\n  from, // Optional\n  gasLimit, // Optional\n  gasPrice, // Optional\n  maxFeePerGas, // Optional\n  maxPriorityFeePerGas // Optional\n  nonce // Optional\n}\n```\n```js\nconst txResponse = await safeSdk.executeTransaction(safeTransaction, options)\n```\n\n## <a name=\"license\">License</a>\n\nThis library is released under MIT.\n\n## <a name=\"contributors\">Contributors</a>\n\n- Germán Martínez ([germartinez](https://github.com/germartinez))\n","readmeFilename":"README.md"}